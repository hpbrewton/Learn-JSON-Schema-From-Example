var cov_2bpeos9eu6=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/stack/Stack.js";var hash="768d373ac4a9b4d4acc8ae7e26ce44aa6a68c8be";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/stack/Stack.js",statementMap:{"0":{start:{line:8,column:4},end:{line:8,column:39}},"1":{start:{line:16,column:4},end:{line:16,column:33}},"2":{start:{line:23,column:4},end:{line:26,column:5}},"3":{start:{line:25,column:6},end:{line:25,column:18}},"4":{start:{line:29,column:4},end:{line:29,column:38}},"5":{start:{line:38,column:4},end:{line:38,column:35}},"6":{start:{line:47,column:24},end:{line:47,column:52}},"7":{start:{line:48,column:4},end:{line:48,column:50}},"8":{start:{line:55,column:4},end:{line:57,column:51}},"9":{start:{line:57,column:29},end:{line:57,column:49}},"10":{start:{line:65,column:4},end:{line:65,column:46}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:2},end:{line:4,column:3}},loc:{start:{line:4,column:16},end:{line:9,column:3}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:2},end:{line:14,column:3}},loc:{start:{line:14,column:12},end:{line:17,column:3}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:2},end:{line:22,column:3}},loc:{start:{line:22,column:9},end:{line:30,column:3}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:35,column:2},end:{line:35,column:3}},loc:{start:{line:35,column:14},end:{line:39,column:3}},line:35},"4":{name:"(anonymous_4)",decl:{start:{line:44,column:2},end:{line:44,column:3}},loc:{start:{line:44,column:8},end:{line:49,column:3}},line:44},"5":{name:"(anonymous_5)",decl:{start:{line:54,column:2},end:{line:54,column:3}},loc:{start:{line:54,column:12},end:{line:58,column:3}},line:54},"6":{name:"(anonymous_6)",decl:{start:{line:57,column:11},end:{line:57,column:12}},loc:{start:{line:57,column:29},end:{line:57,column:49}},line:57},"7":{name:"(anonymous_7)",decl:{start:{line:64,column:2},end:{line:64,column:3}},loc:{start:{line:64,column:21},end:{line:66,column:3}},line:64}},branchMap:{"0":{loc:{start:{line:23,column:4},end:{line:26,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:26,column:5}},{start:{line:23,column:4},end:{line:26,column:5}}],line:23},"1":{loc:{start:{line:48,column:11},end:{line:48,column:49}},type:"cond-expr",locations:[{start:{line:48,column:25},end:{line:48,column:42}},{start:{line:48,column:45},end:{line:48,column:49}}],line:48}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"768d373ac4a9b4d4acc8ae7e26ce44aa6a68c8be"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();import LinkedList from'../linked-list/LinkedList';export default class Stack{constructor(){cov_2bpeos9eu6.f[0]++;cov_2bpeos9eu6.s[0]++;// We're going to implement Stack based on LinkedList since these
// structures are quite similar. Compare push/pop operations of the Stack
// with prepend/deleteHead operations of LinkedList.
this.linkedList=new LinkedList();}/**
   * @return {boolean}
   */isEmpty(){cov_2bpeos9eu6.f[1]++;cov_2bpeos9eu6.s[1]++;// The stack is empty if its linked list doesn't have a head.
return!this.linkedList.head;}/**
   * @return {*}
   */peek(){cov_2bpeos9eu6.f[2]++;cov_2bpeos9eu6.s[2]++;if(this.isEmpty()){cov_2bpeos9eu6.b[0][0]++;cov_2bpeos9eu6.s[3]++;// If the linked list is empty then there is nothing to peek from.
return null;}else{cov_2bpeos9eu6.b[0][1]++;}// Just read the value from the start of linked list without deleting it.
cov_2bpeos9eu6.s[4]++;return this.linkedList.head.value;}/**
   * @param {*} value
   */push(value){cov_2bpeos9eu6.f[3]++;cov_2bpeos9eu6.s[5]++;// Pushing means to lay the value on top of the stack. Therefore let's just add
// the new value at the start of the linked list.
this.linkedList.prepend(value);}/**
   * @return {*}
   */pop(){cov_2bpeos9eu6.f[4]++;// Let's try to delete the first node (the head) from the linked list.
// If there is no head (the linked list is empty) just return null.
const removedHead=(cov_2bpeos9eu6.s[6]++,this.linkedList.deleteHead());cov_2bpeos9eu6.s[7]++;return removedHead?(cov_2bpeos9eu6.b[1][0]++,removedHead.value):(cov_2bpeos9eu6.b[1][1]++,null);}/**
   * @return {*[]}
   */toArray(){cov_2bpeos9eu6.f[5]++;cov_2bpeos9eu6.s[8]++;return this.linkedList.toArray().map(linkedListNode=>{cov_2bpeos9eu6.f[6]++;cov_2bpeos9eu6.s[9]++;return linkedListNode.value;});}/**
   * @param {function} [callback]
   * @return {string}
   */toString(callback){cov_2bpeos9eu6.f[7]++;cov_2bpeos9eu6.s[10]++;return this.linkedList.toString(callback);}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYi9sYXRsaWIvanNzZXJ2ZXIvamF2YXNjcmlwdC1hbGdvcml0aG1zL3NyYy9kYXRhLXN0cnVjdHVyZXMvc3RhY2svU3RhY2suanMiXSwibmFtZXMiOlsiTGlua2VkTGlzdCIsIlN0YWNrIiwiY29uc3RydWN0b3IiLCJsaW5rZWRMaXN0IiwiaXNFbXB0eSIsImhlYWQiLCJwZWVrIiwidmFsdWUiLCJwdXNoIiwicHJlcGVuZCIsInBvcCIsInJlbW92ZWRIZWFkIiwiZGVsZXRlSGVhZCIsInRvQXJyYXkiLCJtYXAiLCJsaW5rZWRMaXN0Tm9kZSIsInRvU3RyaW5nIiwiY2FsbGJhY2siXSwibWFwcGluZ3MiOiJnNEZBQUEsTUFBT0EsQ0FBQUEsVUFBUCxLQUF1QiwyQkFBdkIsQ0FFQSxjQUFlLE1BQU1DLENBQUFBLEtBQU0sQ0FDekJDLFdBQVcsRUFBRyw2Q0FDWjtBQUNBO0FBQ0E7QUFDQSxLQUFLQyxVQUFMLENBQWtCLEdBQUlILENBQUFBLFVBQUosRUFBbEIsQ0FDRCxDQUVEOztLQUdBSSxPQUFPLEVBQUcsNkNBQ1I7QUFDQSxNQUFPLENBQUMsS0FBS0QsVUFBTCxDQUFnQkUsSUFBeEIsQ0FDRCxDQUVEOztLQUdBQyxJQUFJLEVBQUcsNkNBQ0wsR0FBSSxLQUFLRixPQUFMLEVBQUosQ0FBb0IsZ0RBQ2xCO0FBQ0EsTUFBTyxLQUFQLENBQ0QsQ0FIRCwrQkFLQTtBQU5LLHNCQU9MLE1BQU8sTUFBS0QsVUFBTCxDQUFnQkUsSUFBaEIsQ0FBcUJFLEtBQTVCLENBQ0QsQ0FFRDs7S0FHQUMsSUFBSSxDQUFDRCxLQUFELENBQVEsNkNBQ1Y7QUFDQTtBQUNBLEtBQUtKLFVBQUwsQ0FBZ0JNLE9BQWhCLENBQXdCRixLQUF4QixFQUNELENBRUQ7O0tBR0FHLEdBQUcsRUFBRyx1QkFDSjtBQUNBO0FBQ0EsS0FBTUMsQ0FBQUEsV0FBVyx3QkFBRyxLQUFLUixVQUFMLENBQWdCUyxVQUFoQixFQUFILENBQWpCLENBSEksc0JBSUosTUFBT0QsQ0FBQUEsV0FBVywyQkFBR0EsV0FBVyxDQUFDSixLQUFmLDRCQUF1QixJQUF2QixDQUFsQixDQUNELENBRUQ7O0tBR0FNLE9BQU8sRUFBRyw2Q0FDUixNQUFPLE1BQUtWLFVBQUwsQ0FDSlUsT0FESSxHQUVKQyxHQUZJLENBRUFDLGNBQWMsRUFBSSxtREFBQUEsQ0FBQUEsY0FBYyxDQUFDUixLQUFmLENBQW9CLENBRnRDLENBQVAsQ0FHRCxDQUVEOzs7S0FJQVMsUUFBUSxDQUFDQyxRQUFELENBQVcsOENBQ2pCLE1BQU8sTUFBS2QsVUFBTCxDQUFnQmEsUUFBaEIsQ0FBeUJDLFFBQXpCLENBQVAsQ0FDRCxDQS9Ed0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGlua2VkTGlzdCBmcm9tICcuLi9saW5rZWQtbGlzdC9MaW5rZWRMaXN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhY2sge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvLyBXZSdyZSBnb2luZyB0byBpbXBsZW1lbnQgU3RhY2sgYmFzZWQgb24gTGlua2VkTGlzdCBzaW5jZSB0aGVzZVxuICAgIC8vIHN0cnVjdHVyZXMgYXJlIHF1aXRlIHNpbWlsYXIuIENvbXBhcmUgcHVzaC9wb3Agb3BlcmF0aW9ucyBvZiB0aGUgU3RhY2tcbiAgICAvLyB3aXRoIHByZXBlbmQvZGVsZXRlSGVhZCBvcGVyYXRpb25zIG9mIExpbmtlZExpc3QuXG4gICAgdGhpcy5saW5rZWRMaXN0ID0gbmV3IExpbmtlZExpc3QoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgaXNFbXB0eSgpIHtcbiAgICAvLyBUaGUgc3RhY2sgaXMgZW1wdHkgaWYgaXRzIGxpbmtlZCBsaXN0IGRvZXNuJ3QgaGF2ZSBhIGhlYWQuXG4gICAgcmV0dXJuICF0aGlzLmxpbmtlZExpc3QuaGVhZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHsqfVxuICAgKi9cbiAgcGVlaygpIHtcbiAgICBpZiAodGhpcy5pc0VtcHR5KCkpIHtcbiAgICAgIC8vIElmIHRoZSBsaW5rZWQgbGlzdCBpcyBlbXB0eSB0aGVuIHRoZXJlIGlzIG5vdGhpbmcgdG8gcGVlayBmcm9tLlxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgLy8gSnVzdCByZWFkIHRoZSB2YWx1ZSBmcm9tIHRoZSBzdGFydCBvZiBsaW5rZWQgbGlzdCB3aXRob3V0IGRlbGV0aW5nIGl0LlxuICAgIHJldHVybiB0aGlzLmxpbmtlZExpc3QuaGVhZC52YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyp9IHZhbHVlXG4gICAqL1xuICBwdXNoKHZhbHVlKSB7XG4gICAgLy8gUHVzaGluZyBtZWFucyB0byBsYXkgdGhlIHZhbHVlIG9uIHRvcCBvZiB0aGUgc3RhY2suIFRoZXJlZm9yZSBsZXQncyBqdXN0IGFkZFxuICAgIC8vIHRoZSBuZXcgdmFsdWUgYXQgdGhlIHN0YXJ0IG9mIHRoZSBsaW5rZWQgbGlzdC5cbiAgICB0aGlzLmxpbmtlZExpc3QucHJlcGVuZCh2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7Kn1cbiAgICovXG4gIHBvcCgpIHtcbiAgICAvLyBMZXQncyB0cnkgdG8gZGVsZXRlIHRoZSBmaXJzdCBub2RlICh0aGUgaGVhZCkgZnJvbSB0aGUgbGlua2VkIGxpc3QuXG4gICAgLy8gSWYgdGhlcmUgaXMgbm8gaGVhZCAodGhlIGxpbmtlZCBsaXN0IGlzIGVtcHR5KSBqdXN0IHJldHVybiBudWxsLlxuICAgIGNvbnN0IHJlbW92ZWRIZWFkID0gdGhpcy5saW5rZWRMaXN0LmRlbGV0ZUhlYWQoKTtcbiAgICByZXR1cm4gcmVtb3ZlZEhlYWQgPyByZW1vdmVkSGVhZC52YWx1ZSA6IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7KltdfVxuICAgKi9cbiAgdG9BcnJheSgpIHtcbiAgICByZXR1cm4gdGhpcy5saW5rZWRMaXN0XG4gICAgICAudG9BcnJheSgpXG4gICAgICAubWFwKGxpbmtlZExpc3ROb2RlID0+IGxpbmtlZExpc3ROb2RlLnZhbHVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBbY2FsbGJhY2tdXG4gICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIHRvU3RyaW5nKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHRoaXMubGlua2VkTGlzdC50b1N0cmluZyhjYWxsYmFjayk7XG4gIH1cbn1cbiJdfQ==