var cov_pp5yfw5l3=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/graph/Graph.js";var hash="4def3bc82a248deb2a4637a53be3814e2107cb1d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/graph/Graph.js",statementMap:{"0":{start:{line:6,column:4},end:{line:6,column:23}},"1":{start:{line:7,column:4},end:{line:7,column:20}},"2":{start:{line:8,column:4},end:{line:8,column:33}},"3":{start:{line:16,column:4},end:{line:16,column:50}},"4":{start:{line:18,column:4},end:{line:18,column:16}},"5":{start:{line:26,column:4},end:{line:26,column:36}},"6":{start:{line:34,column:4},end:{line:34,column:33}},"7":{start:{line:41,column:4},end:{line:41,column:40}},"8":{start:{line:48,column:4},end:{line:48,column:37}},"9":{start:{line:57,column:22},end:{line:57,column:68}},"10":{start:{line:58,column:20},end:{line:58,column:64}},"11":{start:{line:61,column:4},end:{line:64,column:5}},"12":{start:{line:62,column:6},end:{line:62,column:39}},"13":{start:{line:63,column:6},end:{line:63,column:67}},"14":{start:{line:67,column:4},end:{line:70,column:5}},"15":{start:{line:68,column:6},end:{line:68,column:37}},"16":{start:{line:69,column:6},end:{line:69,column:63}},"17":{start:{line:73,column:4},end:{line:77,column:5}},"18":{start:{line:74,column:6},end:{line:74,column:60}},"19":{start:{line:76,column:6},end:{line:76,column:39}},"20":{start:{line:80,column:4},end:{line:87,column:5}},"21":{start:{line:82,column:6},end:{line:82,column:32}},"22":{start:{line:85,column:6},end:{line:85,column:32}},"23":{start:{line:86,column:6},end:{line:86,column:30}},"24":{start:{line:89,column:4},end:{line:89,column:16}},"25":{start:{line:97,column:4},end:{line:101,column:5}},"26":{start:{line:98,column:6},end:{line:98,column:39}},"27":{start:{line:100,column:6},end:{line:100,column:49}},"28":{start:{line:104,column:24},end:{line:104,column:70}},"29":{start:{line:105,column:22},end:{line:105,column:66}},"30":{start:{line:107,column:4},end:{line:107,column:33}},"31":{start:{line:108,column:4},end:{line:108,column:31}},"32":{start:{line:117,column:19},end:{line:117,column:60}},"33":{start:{line:119,column:4},end:{line:121,column:5}},"34":{start:{line:120,column:6},end:{line:120,column:18}},"35":{start:{line:123,column:4},end:{line:123,column:38}},"36":{start:{line:130,column:4},end:{line:132,column:10}},"37":{start:{line:131,column:6},end:{line:131,column:39}},"38":{start:{line:141,column:4},end:{line:150,column:7}},"39":{start:{line:143,column:6},end:{line:143,column:28}},"40":{start:{line:146,column:6},end:{line:146,column:21}},"41":{start:{line:149,column:6},end:{line:149,column:25}},"42":{start:{line:152,column:4},end:{line:152,column:16}},"43":{start:{line:159,column:28},end:{line:159,column:30}},"44":{start:{line:160,column:4},end:{line:162,column:7}},"45":{start:{line:161,column:6},end:{line:161,column:47}},"46":{start:{line:164,column:4},end:{line:164,column:27}},"47":{start:{line:171,column:21},end:{line:171,column:42}},"48":{start:{line:172,column:28},end:{line:172,column:53}},"49":{start:{line:176,column:28},end:{line:178,column:6}},"50":{start:{line:177,column:6},end:{line:177,column:51}},"51":{start:{line:181,column:4},end:{line:186,column:7}},"52":{start:{line:182,column:6},end:{line:185,column:9}},"53":{start:{line:183,column:30},end:{line:183,column:64}},"54":{start:{line:184,column:8},end:{line:184,column:93}},"55":{start:{line:188,column:4},end:{line:188,column:27}},"56":{start:{line:195,column:4},end:{line:195,column:49}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:2},end:{line:5,column:3}},loc:{start:{line:5,column:34},end:{line:9,column:3}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:2},end:{line:15,column:3}},loc:{start:{line:15,column:23},end:{line:19,column:3}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:28},end:{line:27,column:3}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:33,column:2},end:{line:33,column:3}},loc:{start:{line:33,column:23},end:{line:35,column:3}},line:33},"4":{name:"(anonymous_4)",decl:{start:{line:40,column:2},end:{line:40,column:3}},loc:{start:{line:40,column:19},end:{line:42,column:3}},line:40},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:2},end:{line:47,column:3}},loc:{start:{line:47,column:16},end:{line:49,column:3}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:55,column:2},end:{line:55,column:3}},loc:{start:{line:55,column:16},end:{line:90,column:3}},line:55},"7":{name:"(anonymous_7)",decl:{start:{line:95,column:2},end:{line:95,column:3}},loc:{start:{line:95,column:19},end:{line:109,column:3}},line:95},"8":{name:"(anonymous_8)",decl:{start:{line:116,column:2},end:{line:116,column:3}},loc:{start:{line:116,column:35},end:{line:124,column:3}},line:116},"9":{name:"(anonymous_9)",decl:{start:{line:129,column:2},end:{line:129,column:3}},loc:{start:{line:129,column:14},end:{line:133,column:3}},line:129},"10":{name:"(anonymous_10)",decl:{start:{line:130,column:37},end:{line:130,column:38}},loc:{start:{line:130,column:60},end:{line:132,column:5}},line:130},"11":{name:"(anonymous_11)",decl:{start:{line:139,column:2},end:{line:139,column:3}},loc:{start:{line:139,column:12},end:{line:153,column:3}},line:139},"12":{name:"(anonymous_12)",decl:{start:{line:141,column:31},end:{line:141,column:32}},loc:{start:{line:141,column:41},end:{line:150,column:5}},line:141},"13":{name:"(anonymous_13)",decl:{start:{line:158,column:2},end:{line:158,column:3}},loc:{start:{line:158,column:23},end:{line:165,column:3}},line:158},"14":{name:"(anonymous_14)",decl:{start:{line:160,column:34},end:{line:160,column:35}},loc:{start:{line:160,column:53},end:{line:162,column:5}},line:160},"15":{name:"(anonymous_15)",decl:{start:{line:170,column:2},end:{line:170,column:3}},loc:{start:{line:170,column:23},end:{line:189,column:3}},line:170},"16":{name:"(anonymous_16)",decl:{start:{line:176,column:66},end:{line:176,column:67}},loc:{start:{line:176,column:72},end:{line:178,column:5}},line:176},"17":{name:"(anonymous_17)",decl:{start:{line:181,column:21},end:{line:181,column:22}},loc:{start:{line:181,column:46},end:{line:186,column:5}},line:181},"18":{name:"(anonymous_18)",decl:{start:{line:182,column:36},end:{line:182,column:37}},loc:{start:{line:182,column:50},end:{line:185,column:7}},line:182},"19":{name:"(anonymous_19)",decl:{start:{line:194,column:2},end:{line:194,column:3}},loc:{start:{line:194,column:13},end:{line:196,column:3}},line:194}},branchMap:{"0":{loc:{start:{line:5,column:14},end:{line:5,column:32}},type:"default-arg",locations:[{start:{line:5,column:27},end:{line:5,column:32}}],line:5},"1":{loc:{start:{line:61,column:4},end:{line:64,column:5}},type:"if",locations:[{start:{line:61,column:4},end:{line:64,column:5}},{start:{line:61,column:4},end:{line:64,column:5}}],line:61},"2":{loc:{start:{line:67,column:4},end:{line:70,column:5}},type:"if",locations:[{start:{line:67,column:4},end:{line:70,column:5}},{start:{line:67,column:4},end:{line:70,column:5}}],line:67},"3":{loc:{start:{line:73,column:4},end:{line:77,column:5}},type:"if",locations:[{start:{line:73,column:4},end:{line:77,column:5}},{start:{line:73,column:4},end:{line:77,column:5}}],line:73},"4":{loc:{start:{line:80,column:4},end:{line:87,column:5}},type:"if",locations:[{start:{line:80,column:4},end:{line:87,column:5}},{start:{line:80,column:4},end:{line:87,column:5}}],line:80},"5":{loc:{start:{line:97,column:4},end:{line:101,column:5}},type:"if",locations:[{start:{line:97,column:4},end:{line:101,column:5}},{start:{line:97,column:4},end:{line:101,column:5}}],line:97},"6":{loc:{start:{line:119,column:4},end:{line:121,column:5}},type:"if",locations:[{start:{line:119,column:4},end:{line:121,column:5}},{start:{line:119,column:4},end:{line:121,column:5}}],line:119}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4def3bc82a248deb2a4637a53be3814e2107cb1d"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();export default class Graph{/**
   * @param {boolean} isDirected
   */constructor(isDirected=(cov_pp5yfw5l3.b[0][0]++,false)){cov_pp5yfw5l3.f[0]++;cov_pp5yfw5l3.s[0]++;this.vertices={};cov_pp5yfw5l3.s[1]++;this.edges={};cov_pp5yfw5l3.s[2]++;this.isDirected=isDirected;}/**
   * @param {GraphVertex} newVertex
   * @returns {Graph}
   */addVertex(newVertex){cov_pp5yfw5l3.f[1]++;cov_pp5yfw5l3.s[3]++;this.vertices[newVertex.getKey()]=newVertex;cov_pp5yfw5l3.s[4]++;return this;}/**
   * @param {string} vertexKey
   * @returns GraphVertex
   */getVertexByKey(vertexKey){cov_pp5yfw5l3.f[2]++;cov_pp5yfw5l3.s[5]++;return this.vertices[vertexKey];}/**
   * @param {GraphVertex} vertex
   * @returns {GraphVertex[]}
   */getNeighbors(vertex){cov_pp5yfw5l3.f[3]++;cov_pp5yfw5l3.s[6]++;return vertex.getNeighbors();}/**
   * @return {GraphVertex[]}
   */getAllVertices(){cov_pp5yfw5l3.f[4]++;cov_pp5yfw5l3.s[7]++;return Object.values(this.vertices);}/**
   * @return {GraphEdge[]}
   */getAllEdges(){cov_pp5yfw5l3.f[5]++;cov_pp5yfw5l3.s[8]++;return Object.values(this.edges);}/**
   * @param {GraphEdge} edge
   * @returns {Graph}
   */addEdge(edge){cov_pp5yfw5l3.f[6]++;// Try to find and end start vertices.
let startVertex=(cov_pp5yfw5l3.s[9]++,this.getVertexByKey(edge.startVertex.getKey()));let endVertex=(cov_pp5yfw5l3.s[10]++,this.getVertexByKey(edge.endVertex.getKey()));// Insert start vertex if it wasn't inserted.
cov_pp5yfw5l3.s[11]++;if(!startVertex){cov_pp5yfw5l3.b[1][0]++;cov_pp5yfw5l3.s[12]++;this.addVertex(edge.startVertex);cov_pp5yfw5l3.s[13]++;startVertex=this.getVertexByKey(edge.startVertex.getKey());}else{cov_pp5yfw5l3.b[1][1]++;}// Insert end vertex if it wasn't inserted.
cov_pp5yfw5l3.s[14]++;if(!endVertex){cov_pp5yfw5l3.b[2][0]++;cov_pp5yfw5l3.s[15]++;this.addVertex(edge.endVertex);cov_pp5yfw5l3.s[16]++;endVertex=this.getVertexByKey(edge.endVertex.getKey());}else{cov_pp5yfw5l3.b[2][1]++;}// Check if edge has been already added.
cov_pp5yfw5l3.s[17]++;if(this.edges[edge.getKey()]){cov_pp5yfw5l3.b[3][0]++;cov_pp5yfw5l3.s[18]++;throw new Error('Edge has already been added before');}else{cov_pp5yfw5l3.b[3][1]++;cov_pp5yfw5l3.s[19]++;this.edges[edge.getKey()]=edge;}// Add edge to the vertices.
cov_pp5yfw5l3.s[20]++;if(this.isDirected){cov_pp5yfw5l3.b[4][0]++;cov_pp5yfw5l3.s[21]++;// If graph IS directed then add the edge only to start vertex.
startVertex.addEdge(edge);}else{cov_pp5yfw5l3.b[4][1]++;cov_pp5yfw5l3.s[22]++;// If graph ISN'T directed then add the edge to both vertices.
startVertex.addEdge(edge);cov_pp5yfw5l3.s[23]++;endVertex.addEdge(edge);}cov_pp5yfw5l3.s[24]++;return this;}/**
   * @param {GraphEdge} edge
   */deleteEdge(edge){cov_pp5yfw5l3.f[7]++;cov_pp5yfw5l3.s[25]++;// Delete edge from the list of edges.
if(this.edges[edge.getKey()]){cov_pp5yfw5l3.b[5][0]++;cov_pp5yfw5l3.s[26]++;delete this.edges[edge.getKey()];}else{cov_pp5yfw5l3.b[5][1]++;cov_pp5yfw5l3.s[27]++;throw new Error('Edge not found in graph');}// Try to find and end start vertices and delete edge from them.
const startVertex=(cov_pp5yfw5l3.s[28]++,this.getVertexByKey(edge.startVertex.getKey()));const endVertex=(cov_pp5yfw5l3.s[29]++,this.getVertexByKey(edge.endVertex.getKey()));cov_pp5yfw5l3.s[30]++;startVertex.deleteEdge(edge);cov_pp5yfw5l3.s[31]++;endVertex.deleteEdge(edge);}/**
   * @param {GraphVertex} startVertex
   * @param {GraphVertex} endVertex
   * @return {(GraphEdge|null)}
   */findEdge(startVertex,endVertex){cov_pp5yfw5l3.f[8]++;const vertex=(cov_pp5yfw5l3.s[32]++,this.getVertexByKey(startVertex.getKey()));cov_pp5yfw5l3.s[33]++;if(!vertex){cov_pp5yfw5l3.b[6][0]++;cov_pp5yfw5l3.s[34]++;return null;}else{cov_pp5yfw5l3.b[6][1]++;}cov_pp5yfw5l3.s[35]++;return vertex.findEdge(endVertex);}/**
   * @return {number}
   */getWeight(){cov_pp5yfw5l3.f[9]++;cov_pp5yfw5l3.s[36]++;return this.getAllEdges().reduce((weight,graphEdge)=>{cov_pp5yfw5l3.f[10]++;cov_pp5yfw5l3.s[37]++;return weight+graphEdge.weight;},0);}/**
   * Reverse all the edges in directed graph.
   * @return {Graph}
   */reverse(){cov_pp5yfw5l3.f[11]++;cov_pp5yfw5l3.s[38]++;/** @param {GraphEdge} edge */this.getAllEdges().forEach(edge=>{cov_pp5yfw5l3.f[12]++;cov_pp5yfw5l3.s[39]++;// Delete straight edge from graph and from vertices.
this.deleteEdge(edge);// Reverse the edge.
cov_pp5yfw5l3.s[40]++;edge.reverse();// Add reversed edge back to the graph and its vertices.
cov_pp5yfw5l3.s[41]++;this.addEdge(edge);});cov_pp5yfw5l3.s[42]++;return this;}/**
   * @return {object}
   */getVerticesIndices(){cov_pp5yfw5l3.f[13]++;const verticesIndices=(cov_pp5yfw5l3.s[43]++,{});cov_pp5yfw5l3.s[44]++;this.getAllVertices().forEach((vertex,index)=>{cov_pp5yfw5l3.f[14]++;cov_pp5yfw5l3.s[45]++;verticesIndices[vertex.getKey()]=index;});cov_pp5yfw5l3.s[46]++;return verticesIndices;}/**
   * @return {*[][]}
   */getAdjacencyMatrix(){cov_pp5yfw5l3.f[15]++;const vertices=(cov_pp5yfw5l3.s[47]++,this.getAllVertices());const verticesIndices=(cov_pp5yfw5l3.s[48]++,this.getVerticesIndices());// Init matrix with infinities meaning that there is no ways of
// getting from one vertex to another yet.
const adjacencyMatrix=(cov_pp5yfw5l3.s[49]++,Array(vertices.length).fill(null).map(()=>{cov_pp5yfw5l3.f[16]++;cov_pp5yfw5l3.s[50]++;return Array(vertices.length).fill(Infinity);}));// Fill the columns.
cov_pp5yfw5l3.s[51]++;vertices.forEach((vertex,vertexIndex)=>{cov_pp5yfw5l3.f[17]++;cov_pp5yfw5l3.s[52]++;vertex.getNeighbors().forEach(neighbor=>{cov_pp5yfw5l3.f[18]++;const neighborIndex=(cov_pp5yfw5l3.s[53]++,verticesIndices[neighbor.getKey()]);cov_pp5yfw5l3.s[54]++;adjacencyMatrix[vertexIndex][neighborIndex]=this.findEdge(vertex,neighbor).weight;});});cov_pp5yfw5l3.s[55]++;return adjacencyMatrix;}/**
   * @return {string}
   */toString(){cov_pp5yfw5l3.f[19]++;cov_pp5yfw5l3.s[56]++;return Object.keys(this.vertices).toString();}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,