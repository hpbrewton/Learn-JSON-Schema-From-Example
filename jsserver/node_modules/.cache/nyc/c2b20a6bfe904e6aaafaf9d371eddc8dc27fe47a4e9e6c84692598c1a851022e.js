var cov_25ul7h575u=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/heap/Heap.js";var hash="159c9322945972583f61d3c5799fbff0387cc345";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/heap/Heap.js",statementMap:{"0":{start:{line:12,column:4},end:{line:14,column:5}},"1":{start:{line:13,column:6},end:{line:13,column:69}},"2":{start:{line:17,column:4},end:{line:17,column:28}},"3":{start:{line:18,column:4},end:{line:18,column:54}},"4":{start:{line:26,column:4},end:{line:26,column:33}},"5":{start:{line:34,column:4},end:{line:34,column:33}},"6":{start:{line:42,column:4},end:{line:42,column:44}},"7":{start:{line:50,column:4},end:{line:50,column:48}},"8":{start:{line:58,column:4},end:{line:58,column:75}},"9":{start:{line:66,column:4},end:{line:66,column:76}},"10":{start:{line:74,column:4},end:{line:74,column:67}},"11":{start:{line:82,column:4},end:{line:82,column:68}},"12":{start:{line:90,column:4},end:{line:90,column:63}},"13":{start:{line:98,column:16},end:{line:98,column:44}},"14":{start:{line:99,column:4},end:{line:99,column:64}},"15":{start:{line:100,column:4},end:{line:100,column:39}},"16":{start:{line:107,column:4},end:{line:109,column:5}},"17":{start:{line:108,column:6},end:{line:108,column:18}},"18":{start:{line:111,column:4},end:{line:111,column:33}},"19":{start:{line:118,column:4},end:{line:120,column:5}},"20":{start:{line:119,column:6},end:{line:119,column:18}},"21":{start:{line:122,column:4},end:{line:124,column:5}},"22":{start:{line:123,column:6},end:{line:123,column:38}},"23":{start:{line:126,column:17},end:{line:126,column:38}},"24":{start:{line:129,column:4},end:{line:129,column:53}},"25":{start:{line:130,column:4},end:{line:130,column:23}},"26":{start:{line:132,column:4},end:{line:132,column:16}},"27":{start:{line:140,column:4},end:{line:140,column:34}},"28":{start:{line:141,column:4},end:{line:141,column:21}},"29":{start:{line:142,column:4},end:{line:142,column:16}},"30":{start:{line:152,column:34},end:{line:152,column:68}},"31":{start:{line:154,column:4},end:{line:184,column:5}},"32":{start:{line:154,column:25},end:{line:154,column:26}},"33":{start:{line:157,column:28},end:{line:157,column:61}},"34":{start:{line:161,column:6},end:{line:183,column:7}},"35":{start:{line:162,column:8},end:{line:162,column:33}},"36":{start:{line:165,column:8},end:{line:165,column:69}},"37":{start:{line:168,column:27},end:{line:168,column:53}},"38":{start:{line:172,column:8},end:{line:182,column:9}},"39":{start:{line:179,column:10},end:{line:179,column:42}},"40":{start:{line:181,column:10},end:{line:181,column:40}},"41":{start:{line:186,column:4},end:{line:186,column:16}},"42":{start:{line:195,column:29},end:{line:195,column:31}},"43":{start:{line:197,column:4},end:{line:201,column:5}},"44":{start:{line:197,column:25},end:{line:197,column:26}},"45":{start:{line:198,column:6},end:{line:200,column:7}},"46":{start:{line:199,column:8},end:{line:199,column:41}},"47":{start:{line:203,column:4},end:{line:203,column:28}},"48":{start:{line:210,column:4},end:{line:210,column:38}},"49":{start:{line:217,column:4},end:{line:217,column:41}},"50":{start:{line:227,column:23},end:{line:227,column:72}},"51":{start:{line:229,column:4},end:{line:235,column:5}},"52":{start:{line:233,column:6},end:{line:233,column:65}},"53":{start:{line:234,column:6},end:{line:234,column:55}},"54":{start:{line:245,column:23},end:{line:245,column:39}},"55":{start:{line:246,column:20},end:{line:246,column:24}},"56":{start:{line:248,column:4},end:{line:267,column:5}},"57":{start:{line:249,column:6},end:{line:256,column:7}},"58":{start:{line:253,column:8},end:{line:253,column:58}},"59":{start:{line:255,column:8},end:{line:255,column:57}},"60":{start:{line:258,column:6},end:{line:263,column:7}},"61":{start:{line:262,column:8},end:{line:262,column:14}},"62":{start:{line:265,column:6},end:{line:265,column:41}},"63":{start:{line:266,column:6},end:{line:266,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:2},end:{line:11,column:3}},loc:{start:{line:11,column:34},end:{line:19,column:3}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:33},end:{line:27,column:3}},line:25},"2":{name:"(anonymous_2)",decl:{start:{line:33,column:2},end:{line:33,column:3}},loc:{start:{line:33,column:34},end:{line:35,column:3}},line:33},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:2},end:{line:41,column:3}},loc:{start:{line:41,column:29},end:{line:43,column:3}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:49,column:2},end:{line:49,column:3}},loc:{start:{line:49,column:24},end:{line:51,column:3}},line:49},"5":{name:"(anonymous_5)",decl:{start:{line:57,column:2},end:{line:57,column:3}},loc:{start:{line:57,column:28},end:{line:59,column:3}},line:57},"6":{name:"(anonymous_6)",decl:{start:{line:65,column:2},end:{line:65,column:3}},loc:{start:{line:65,column:29},end:{line:67,column:3}},line:65},"7":{name:"(anonymous_7)",decl:{start:{line:73,column:2},end:{line:73,column:3}},loc:{start:{line:73,column:25},end:{line:75,column:3}},line:73},"8":{name:"(anonymous_8)",decl:{start:{line:81,column:2},end:{line:81,column:3}},loc:{start:{line:81,column:26},end:{line:83,column:3}},line:81},"9":{name:"(anonymous_9)",decl:{start:{line:89,column:2},end:{line:89,column:3}},loc:{start:{line:89,column:21},end:{line:91,column:3}},line:89},"10":{name:"(anonymous_10)",decl:{start:{line:97,column:2},end:{line:97,column:3}},loc:{start:{line:97,column:27},end:{line:101,column:3}},line:97},"11":{name:"(anonymous_11)",decl:{start:{line:106,column:2},end:{line:106,column:3}},loc:{start:{line:106,column:9},end:{line:112,column:3}},line:106},"12":{name:"(anonymous_12)",decl:{start:{line:117,column:2},end:{line:117,column:3}},loc:{start:{line:117,column:9},end:{line:133,column:3}},line:117},"13":{name:"(anonymous_13)",decl:{start:{line:139,column:2},end:{line:139,column:3}},loc:{start:{line:139,column:12},end:{line:143,column:3}},line:139},"14":{name:"(anonymous_14)",decl:{start:{line:150,column:2},end:{line:150,column:3}},loc:{start:{line:150,column:42},end:{line:187,column:3}},line:150},"15":{name:"(anonymous_15)",decl:{start:{line:194,column:2},end:{line:194,column:3}},loc:{start:{line:194,column:40},end:{line:204,column:3}},line:194},"16":{name:"(anonymous_16)",decl:{start:{line:209,column:2},end:{line:209,column:3}},loc:{start:{line:209,column:12},end:{line:211,column:3}},line:209},"17":{name:"(anonymous_17)",decl:{start:{line:216,column:2},end:{line:216,column:3}},loc:{start:{line:216,column:13},end:{line:218,column:3}},line:216},"18":{name:"(anonymous_18)",decl:{start:{line:223,column:2},end:{line:223,column:3}},loc:{start:{line:223,column:30},end:{line:236,column:3}},line:223},"19":{name:"(anonymous_19)",decl:{start:{line:241,column:2},end:{line:241,column:3}},loc:{start:{line:241,column:36},end:{line:268,column:3}},line:241}},branchMap:{"0":{loc:{start:{line:12,column:4},end:{line:14,column:5}},type:"if",locations:[{start:{line:12,column:4},end:{line:14,column:5}},{start:{line:12,column:4},end:{line:14,column:5}}],line:12},"1":{loc:{start:{line:107,column:4},end:{line:109,column:5}},type:"if",locations:[{start:{line:107,column:4},end:{line:109,column:5}},{start:{line:107,column:4},end:{line:109,column:5}}],line:107},"2":{loc:{start:{line:118,column:4},end:{line:120,column:5}},type:"if",locations:[{start:{line:118,column:4},end:{line:120,column:5}},{start:{line:118,column:4},end:{line:120,column:5}}],line:118},"3":{loc:{start:{line:122,column:4},end:{line:124,column:5}},type:"if",locations:[{start:{line:122,column:4},end:{line:124,column:5}},{start:{line:122,column:4},end:{line:124,column:5}}],line:122},"4":{loc:{start:{line:150,column:15},end:{line:150,column:40}},type:"default-arg",locations:[{start:{line:150,column:28},end:{line:150,column:40}}],line:150},"5":{loc:{start:{line:161,column:6},end:{line:183,column:7}},type:"if",locations:[{start:{line:161,column:6},end:{line:183,column:7}},{start:{line:161,column:6},end:{line:183,column:7}}],line:161},"6":{loc:{start:{line:172,column:8},end:{line:182,column:9}},type:"if",locations:[{start:{line:172,column:8},end:{line:182,column:9}},{start:{line:172,column:8},end:{line:182,column:9}}],line:172},"7":{loc:{start:{line:173,column:10},end:{line:177,column:11}},type:"binary-expr",locations:[{start:{line:173,column:10},end:{line:173,column:42}},{start:{line:175,column:12},end:{line:175,column:23}},{start:{line:176,column:15},end:{line:176,column:87}}],line:173},"8":{loc:{start:{line:194,column:13},end:{line:194,column:38}},type:"default-arg",locations:[{start:{line:194,column:26},end:{line:194,column:38}}],line:194},"9":{loc:{start:{line:198,column:6},end:{line:200,column:7}},type:"if",locations:[{start:{line:198,column:6},end:{line:200,column:7}},{start:{line:198,column:6},end:{line:200,column:7}}],line:198},"10":{loc:{start:{line:227,column:23},end:{line:227,column:72}},type:"binary-expr",locations:[{start:{line:227,column:23},end:{line:227,column:39}},{start:{line:227,column:43},end:{line:227,column:72}}],line:227},"11":{loc:{start:{line:230,column:6},end:{line:231,column:96}},type:"binary-expr",locations:[{start:{line:230,column:6},end:{line:230,column:34}},{start:{line:231,column:9},end:{line:231,column:96}}],line:230},"12":{loc:{start:{line:241,column:14},end:{line:241,column:34}},type:"default-arg",locations:[{start:{line:241,column:33},end:{line:241,column:34}}],line:241},"13":{loc:{start:{line:249,column:6},end:{line:256,column:7}},type:"if",locations:[{start:{line:249,column:6},end:{line:256,column:7}},{start:{line:249,column:6},end:{line:256,column:7}}],line:249},"14":{loc:{start:{line:250,column:8},end:{line:251,column:97}},type:"binary-expr",locations:[{start:{line:250,column:8},end:{line:250,column:40}},{start:{line:251,column:11},end:{line:251,column:97}}],line:250},"15":{loc:{start:{line:258,column:6},end:{line:263,column:7}},type:"if",locations:[{start:{line:258,column:6},end:{line:263,column:7}},{start:{line:258,column:6},end:{line:263,column:7}}],line:258}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0],"13":[0,0],"14":[0,0],"15":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"159c9322945972583f61d3c5799fbff0387cc345"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();import Comparator from'../../utils/comparator/Comparator';/**
 * Parent class for Min and Max Heaps.
 */export default class Heap{/**
   * @constructs Heap
   * @param {Function} [comparatorFunction]
   */constructor(comparatorFunction){cov_25ul7h575u.f[0]++;cov_25ul7h575u.s[0]++;if(new.target===Heap){cov_25ul7h575u.b[0][0]++;cov_25ul7h575u.s[1]++;throw new TypeError('Cannot construct Heap instance directly');}else{cov_25ul7h575u.b[0][1]++;}// Array representation of the heap.
cov_25ul7h575u.s[2]++;this.heapContainer=[];cov_25ul7h575u.s[3]++;this.compare=new Comparator(comparatorFunction);}/**
   * @param {number} parentIndex
   * @return {number}
   */getLeftChildIndex(parentIndex){cov_25ul7h575u.f[1]++;cov_25ul7h575u.s[4]++;return 2*parentIndex+1;}/**
   * @param {number} parentIndex
   * @return {number}
   */getRightChildIndex(parentIndex){cov_25ul7h575u.f[2]++;cov_25ul7h575u.s[5]++;return 2*parentIndex+2;}/**
   * @param {number} childIndex
   * @return {number}
   */getParentIndex(childIndex){cov_25ul7h575u.f[3]++;cov_25ul7h575u.s[6]++;return Math.floor((childIndex-1)/2);}/**
   * @param {number} childIndex
   * @return {boolean}
   */hasParent(childIndex){cov_25ul7h575u.f[4]++;cov_25ul7h575u.s[7]++;return this.getParentIndex(childIndex)>=0;}/**
   * @param {number} parentIndex
   * @return {boolean}
   */hasLeftChild(parentIndex){cov_25ul7h575u.f[5]++;cov_25ul7h575u.s[8]++;return this.getLeftChildIndex(parentIndex)<this.heapContainer.length;}/**
   * @param {number} parentIndex
   * @return {boolean}
   */hasRightChild(parentIndex){cov_25ul7h575u.f[6]++;cov_25ul7h575u.s[9]++;return this.getRightChildIndex(parentIndex)<this.heapContainer.length;}/**
   * @param {number} parentIndex
   * @return {*}
   */leftChild(parentIndex){cov_25ul7h575u.f[7]++;cov_25ul7h575u.s[10]++;return this.heapContainer[this.getLeftChildIndex(parentIndex)];}/**
   * @param {number} parentIndex
   * @return {*}
   */rightChild(parentIndex){cov_25ul7h575u.f[8]++;cov_25ul7h575u.s[11]++;return this.heapContainer[this.getRightChildIndex(parentIndex)];}/**
   * @param {number} childIndex
   * @return {*}
   */parent(childIndex){cov_25ul7h575u.f[9]++;cov_25ul7h575u.s[12]++;return this.heapContainer[this.getParentIndex(childIndex)];}/**
   * @param {number} indexOne
   * @param {number} indexTwo
   */swap(indexOne,indexTwo){cov_25ul7h575u.f[10]++;const tmp=(cov_25ul7h575u.s[13]++,this.heapContainer[indexTwo]);cov_25ul7h575u.s[14]++;this.heapContainer[indexTwo]=this.heapContainer[indexOne];cov_25ul7h575u.s[15]++;this.heapContainer[indexOne]=tmp;}/**
   * @return {*}
   */peek(){cov_25ul7h575u.f[11]++;cov_25ul7h575u.s[16]++;if(this.heapContainer.length===0){cov_25ul7h575u.b[1][0]++;cov_25ul7h575u.s[17]++;return null;}else{cov_25ul7h575u.b[1][1]++;}cov_25ul7h575u.s[18]++;return this.heapContainer[0];}/**
   * @return {*}
   */poll(){cov_25ul7h575u.f[12]++;cov_25ul7h575u.s[19]++;if(this.heapContainer.length===0){cov_25ul7h575u.b[2][0]++;cov_25ul7h575u.s[20]++;return null;}else{cov_25ul7h575u.b[2][1]++;}cov_25ul7h575u.s[21]++;if(this.heapContainer.length===1){cov_25ul7h575u.b[3][0]++;cov_25ul7h575u.s[22]++;return this.heapContainer.pop();}else{cov_25ul7h575u.b[3][1]++;}const item=(cov_25ul7h575u.s[23]++,this.heapContainer[0]);// Move the last element from the end to the head.
cov_25ul7h575u.s[24]++;this.heapContainer[0]=this.heapContainer.pop();cov_25ul7h575u.s[25]++;this.heapifyDown();cov_25ul7h575u.s[26]++;return item;}/**
   * @param {*} item
   * @return {Heap}
   */add(item){cov_25ul7h575u.f[13]++;cov_25ul7h575u.s[27]++;this.heapContainer.push(item);cov_25ul7h575u.s[28]++;this.heapifyUp();cov_25ul7h575u.s[29]++;return this;}/**
   * @param {*} item
   * @param {Comparator} [comparator]
   * @return {Heap}
   */remove(item,comparator=(cov_25ul7h575u.b[4][0]++,this.compare)){cov_25ul7h575u.f[14]++;// Find number of items to remove.
const numberOfItemsToRemove=(cov_25ul7h575u.s[30]++,this.find(item,comparator).length);cov_25ul7h575u.s[31]++;for(let iteration=(cov_25ul7h575u.s[32]++,0);iteration<numberOfItemsToRemove;iteration+=1){// We need to find item index to remove each time after removal since
// indices are being changed after each heapify process.
const indexToRemove=(cov_25ul7h575u.s[33]++,this.find(item,comparator).pop());// If we need to remove last child in the heap then just remove it.
// There is no need to heapify the heap afterwards.
cov_25ul7h575u.s[34]++;if(indexToRemove===this.heapContainer.length-1){cov_25ul7h575u.b[5][0]++;cov_25ul7h575u.s[35]++;this.heapContainer.pop();}else{cov_25ul7h575u.b[5][1]++;cov_25ul7h575u.s[36]++;// Move last element in heap to the vacant (removed) position.
this.heapContainer[indexToRemove]=this.heapContainer.pop();// Get parent.
const parentItem=(cov_25ul7h575u.s[37]++,this.parent(indexToRemove));// If there is no parent or parent is in correct order with the node
// we're going to delete then heapify down. Otherwise heapify up.
cov_25ul7h575u.s[38]++;if((cov_25ul7h575u.b[7][0]++,this.hasLeftChild(indexToRemove))&&((cov_25ul7h575u.b[7][1]++,!parentItem)||(cov_25ul7h575u.b[7][2]++,this.pairIsInCorrectOrder(parentItem,this.heapContainer[indexToRemove])))){cov_25ul7h575u.b[6][0]++;cov_25ul7h575u.s[39]++;this.heapifyDown(indexToRemove);}else{cov_25ul7h575u.b[6][1]++;cov_25ul7h575u.s[40]++;this.heapifyUp(indexToRemove);}}}cov_25ul7h575u.s[41]++;return this;}/**
   * @param {*} item
   * @param {Comparator} [comparator]
   * @return {Number[]}
   */find(item,comparator=(cov_25ul7h575u.b[8][0]++,this.compare)){cov_25ul7h575u.f[15]++;const foundItemIndices=(cov_25ul7h575u.s[42]++,[]);cov_25ul7h575u.s[43]++;for(let itemIndex=(cov_25ul7h575u.s[44]++,0);itemIndex<this.heapContainer.length;itemIndex+=1){cov_25ul7h575u.s[45]++;if(comparator.equal(item,this.heapContainer[itemIndex])){cov_25ul7h575u.b[9][0]++;cov_25ul7h575u.s[46]++;foundItemIndices.push(itemIndex);}else{cov_25ul7h575u.b[9][1]++;}}cov_25ul7h575u.s[47]++;return foundItemIndices;}/**
   * @return {boolean}
   */isEmpty(){cov_25ul7h575u.f[16]++;cov_25ul7h575u.s[48]++;return!this.heapContainer.length;}/**
   * @return {string}
   */toString(){cov_25ul7h575u.f[17]++;cov_25ul7h575u.s[49]++;return this.heapContainer.toString();}/**
   * @param {number} [customStartIndex]
   */heapifyUp(customStartIndex){cov_25ul7h575u.f[18]++;// Take the last element (last in array or the bottom left in a tree)
// in the heap container and lift it up until it is in the correct
// order with respect to its parent element.
let currentIndex=(cov_25ul7h575u.s[50]++,(cov_25ul7h575u.b[10][0]++,customStartIndex)||(cov_25ul7h575u.b[10][1]++,this.heapContainer.length-1));cov_25ul7h575u.s[51]++;while((cov_25ul7h575u.b[11][0]++,this.hasParent(currentIndex))&&(cov_25ul7h575u.b[11][1]++,!this.pairIsInCorrectOrder(this.parent(currentIndex),this.heapContainer[currentIndex]))){cov_25ul7h575u.s[52]++;this.swap(currentIndex,this.getParentIndex(currentIndex));cov_25ul7h575u.s[53]++;currentIndex=this.getParentIndex(currentIndex);}}/**
   * @param {number} [customStartIndex]
   */heapifyDown(customStartIndex=(cov_25ul7h575u.b[12][0]++,0)){cov_25ul7h575u.f[19]++;// Compare the parent element to its children and swap parent with the appropriate
// child (smallest child for MinHeap, largest child for MaxHeap).
// Do the same for next children after swap.
let currentIndex=(cov_25ul7h575u.s[54]++,customStartIndex);let nextIndex=(cov_25ul7h575u.s[55]++,null);cov_25ul7h575u.s[56]++;while(this.hasLeftChild(currentIndex)){cov_25ul7h575u.s[57]++;if((cov_25ul7h575u.b[14][0]++,this.hasRightChild(currentIndex))&&(cov_25ul7h575u.b[14][1]++,this.pairIsInCorrectOrder(this.rightChild(currentIndex),this.leftChild(currentIndex)))){cov_25ul7h575u.b[13][0]++;cov_25ul7h575u.s[58]++;nextIndex=this.getRightChildIndex(currentIndex);}else{cov_25ul7h575u.b[13][1]++;cov_25ul7h575u.s[59]++;nextIndex=this.getLeftChildIndex(currentIndex);}cov_25ul7h575u.s[60]++;if(this.pairIsInCorrectOrder(this.heapContainer[currentIndex],this.heapContainer[nextIndex])){cov_25ul7h575u.b[15][0]++;cov_25ul7h575u.s[61]++;break;}else{cov_25ul7h575u.b[15][1]++;}cov_25ul7h575u.s[62]++;this.swap(currentIndex,nextIndex);cov_25ul7h575u.s[63]++;currentIndex=nextIndex;}}/**
   * Checks if pair of heap elements is in correct order.
   * For MinHeap the first element must be always smaller or equal.
   * For MaxHeap the first element must be always bigger or equal.
   *
   * @param {*} firstElement
   * @param {*} secondElement
   * @return {boolean}
   */ /* istanbul ignore next */pairIsInCorrectOrder(firstElement,secondElement){throw new Error(`
      You have to implement heap pair comparision method
      for ${firstElement} and ${secondElement} values.
    `);}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,