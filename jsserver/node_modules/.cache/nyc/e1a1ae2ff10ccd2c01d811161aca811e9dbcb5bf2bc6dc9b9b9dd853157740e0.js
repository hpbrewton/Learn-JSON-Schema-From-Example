var cov_1x726vudmc=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/linked-list/LinkedList.js";var hash="404fc942e0383fd585aec11ad2b21f196061638b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/linked-list/LinkedList.js",statementMap:{"0":{start:{line:10,column:4},end:{line:10,column:21}},"1":{start:{line:13,column:4},end:{line:13,column:21}},"2":{start:{line:15,column:4},end:{line:15,column:54}},"3":{start:{line:24,column:20},end:{line:24,column:56}},"4":{start:{line:25,column:4},end:{line:25,column:24}},"5":{start:{line:28,column:4},end:{line:30,column:5}},"6":{start:{line:29,column:6},end:{line:29,column:26}},"7":{start:{line:32,column:4},end:{line:32,column:16}},"8":{start:{line:40,column:20},end:{line:40,column:45}},"9":{start:{line:43,column:4},end:{line:48,column:5}},"10":{start:{line:44,column:6},end:{line:44,column:26}},"11":{start:{line:45,column:6},end:{line:45,column:26}},"12":{start:{line:47,column:6},end:{line:47,column:18}},"13":{start:{line:51,column:4},end:{line:51,column:29}},"14":{start:{line:52,column:4},end:{line:52,column:24}},"15":{start:{line:54,column:4},end:{line:54,column:16}},"16":{start:{line:62,column:4},end:{line:64,column:5}},"17":{start:{line:63,column:6},end:{line:63,column:18}},"18":{start:{line:66,column:22},end:{line:66,column:26}},"19":{start:{line:70,column:4},end:{line:73,column:5}},"20":{start:{line:71,column:6},end:{line:71,column:30}},"21":{start:{line:72,column:6},end:{line:72,column:33}},"22":{start:{line:75,column:22},end:{line:75,column:31}},"23":{start:{line:77,column:4},end:{line:87,column:5}},"24":{start:{line:79,column:6},end:{line:86,column:7}},"25":{start:{line:80,column:8},end:{line:85,column:9}},"26":{start:{line:81,column:10},end:{line:81,column:41}},"27":{start:{line:82,column:10},end:{line:82,column:51}},"28":{start:{line:84,column:10},end:{line:84,column:41}},"29":{start:{line:90,column:4},end:{line:92,column:5}},"30":{start:{line:91,column:6},end:{line:91,column:30}},"31":{start:{line:94,column:4},end:{line:94,column:23}},"32":{start:{line:104,column:4},end:{line:106,column:5}},"33":{start:{line:105,column:6},end:{line:105,column:18}},"34":{start:{line:108,column:22},end:{line:108,column:31}},"35":{start:{line:110,column:4},end:{line:122,column:5}},"36":{start:{line:112,column:6},end:{line:114,column:7}},"37":{start:{line:113,column:8},end:{line:113,column:27}},"38":{start:{line:117,column:6},end:{line:119,column:7}},"39":{start:{line:118,column:8},end:{line:118,column:27}},"40":{start:{line:121,column:6},end:{line:121,column:37}},"41":{start:{line:124,column:4},end:{line:124,column:16}},"42":{start:{line:131,column:24},end:{line:131,column:33}},"43":{start:{line:133,column:4},end:{line:139,column:5}},"44":{start:{line:135,column:6},end:{line:135,column:23}},"45":{start:{line:136,column:6},end:{line:136,column:23}},"46":{start:{line:138,column:6},end:{line:138,column:25}},"47":{start:{line:144,column:22},end:{line:144,column:31}},"48":{start:{line:145,column:4},end:{line:151,column:5}},"49":{start:{line:146,column:6},end:{line:150,column:7}},"50":{start:{line:147,column:8},end:{line:147,column:32}},"51":{start:{line:149,column:8},end:{line:149,column:39}},"52":{start:{line:153,column:4},end:{line:153,column:28}},"53":{start:{line:155,column:4},end:{line:155,column:23}},"54":{start:{line:162,column:4},end:{line:164,column:5}},"55":{start:{line:163,column:6},end:{line:163,column:18}},"56":{start:{line:166,column:24},end:{line:166,column:33}},"57":{start:{line:168,column:4},end:{line:173,column:5}},"58":{start:{line:169,column:6},end:{line:169,column:33}},"59":{start:{line:171,column:6},end:{line:171,column:23}},"60":{start:{line:172,column:6},end:{line:172,column:23}},"61":{start:{line:175,column:4},end:{line:175,column:23}},"62":{start:{line:183,column:4},end:{line:183,column:48}},"63":{start:{line:183,column:28},end:{line:183,column:46}},"64":{start:{line:185,column:4},end:{line:185,column:16}},"65":{start:{line:192,column:18},end:{line:192,column:20}},"66":{start:{line:194,column:22},end:{line:194,column:31}},"67":{start:{line:195,column:4},end:{line:198,column:5}},"68":{start:{line:196,column:6},end:{line:196,column:30}},"69":{start:{line:197,column:6},end:{line:197,column:37}},"70":{start:{line:200,column:4},end:{line:200,column:17}},"71":{start:{line:208,column:4},end:{line:208,column:74}},"72":{start:{line:208,column:38},end:{line:208,column:61}},"73":{start:{line:216,column:19},end:{line:216,column:28}},"74":{start:{line:217,column:19},end:{line:217,column:23}},"75":{start:{line:218,column:19},end:{line:218,column:23}},"76":{start:{line:220,column:4},end:{line:230,column:5}},"77":{start:{line:222,column:6},end:{line:222,column:31}},"78":{start:{line:225,column:6},end:{line:225,column:31}},"79":{start:{line:228,column:6},end:{line:228,column:26}},"80":{start:{line:229,column:6},end:{line:229,column:26}},"81":{start:{line:233,column:4},end:{line:233,column:26}},"82":{start:{line:234,column:4},end:{line:234,column:25}},"83":{start:{line:236,column:4},end:{line:236,column:16}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:2},end:{line:8,column:3}},loc:{start:{line:8,column:34},end:{line:16,column:3}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:2},end:{line:22,column:3}},loc:{start:{line:22,column:17},end:{line:33,column:3}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:39,column:2},end:{line:39,column:3}},loc:{start:{line:39,column:16},end:{line:55,column:3}},line:39},"3":{name:"(anonymous_3)",decl:{start:{line:61,column:2},end:{line:61,column:3}},loc:{start:{line:61,column:16},end:{line:95,column:3}},line:61},"4":{name:"(anonymous_4)",decl:{start:{line:103,column:2},end:{line:103,column:3}},loc:{start:{line:103,column:52},end:{line:125,column:3}},line:103},"5":{name:"(anonymous_5)",decl:{start:{line:130,column:2},end:{line:130,column:3}},loc:{start:{line:130,column:15},end:{line:156,column:3}},line:130},"6":{name:"(anonymous_6)",decl:{start:{line:161,column:2},end:{line:161,column:3}},loc:{start:{line:161,column:15},end:{line:176,column:3}},line:161},"7":{name:"(anonymous_7)",decl:{start:{line:182,column:2},end:{line:182,column:3}},loc:{start:{line:182,column:20},end:{line:186,column:3}},line:182},"8":{name:"(anonymous_8)",decl:{start:{line:183,column:19},end:{line:183,column:20}},loc:{start:{line:183,column:28},end:{line:183,column:46}},line:183},"9":{name:"(anonymous_9)",decl:{start:{line:191,column:2},end:{line:191,column:3}},loc:{start:{line:191,column:12},end:{line:201,column:3}},line:191},"10":{name:"(anonymous_10)",decl:{start:{line:207,column:2},end:{line:207,column:3}},loc:{start:{line:207,column:21},end:{line:209,column:3}},line:207},"11":{name:"(anonymous_11)",decl:{start:{line:208,column:30},end:{line:208,column:31}},loc:{start:{line:208,column:38},end:{line:208,column:61}},line:208},"12":{name:"(anonymous_12)",decl:{start:{line:215,column:2},end:{line:215,column:3}},loc:{start:{line:215,column:12},end:{line:237,column:3}},line:215}},branchMap:{"0":{loc:{start:{line:28,column:4},end:{line:30,column:5}},type:"if",locations:[{start:{line:28,column:4},end:{line:30,column:5}},{start:{line:28,column:4},end:{line:30,column:5}}],line:28},"1":{loc:{start:{line:43,column:4},end:{line:48,column:5}},type:"if",locations:[{start:{line:43,column:4},end:{line:48,column:5}},{start:{line:43,column:4},end:{line:48,column:5}}],line:43},"2":{loc:{start:{line:62,column:4},end:{line:64,column:5}},type:"if",locations:[{start:{line:62,column:4},end:{line:64,column:5}},{start:{line:62,column:4},end:{line:64,column:5}}],line:62},"3":{loc:{start:{line:70,column:11},end:{line:70,column:66}},type:"binary-expr",locations:[{start:{line:70,column:11},end:{line:70,column:20}},{start:{line:70,column:24},end:{line:70,column:66}}],line:70},"4":{loc:{start:{line:77,column:4},end:{line:87,column:5}},type:"if",locations:[{start:{line:77,column:4},end:{line:87,column:5}},{start:{line:77,column:4},end:{line:87,column:5}}],line:77},"5":{loc:{start:{line:80,column:8},end:{line:85,column:9}},type:"if",locations:[{start:{line:80,column:8},end:{line:85,column:9}},{start:{line:80,column:8},end:{line:85,column:9}}],line:80},"6":{loc:{start:{line:90,column:4},end:{line:92,column:5}},type:"if",locations:[{start:{line:90,column:4},end:{line:92,column:5}},{start:{line:90,column:4},end:{line:92,column:5}}],line:90},"7":{loc:{start:{line:103,column:9},end:{line:103,column:26}},type:"default-arg",locations:[{start:{line:103,column:17},end:{line:103,column:26}}],line:103},"8":{loc:{start:{line:103,column:28},end:{line:103,column:48}},type:"default-arg",locations:[{start:{line:103,column:39},end:{line:103,column:48}}],line:103},"9":{loc:{start:{line:104,column:4},end:{line:106,column:5}},type:"if",locations:[{start:{line:104,column:4},end:{line:106,column:5}},{start:{line:104,column:4},end:{line:106,column:5}}],line:104},"10":{loc:{start:{line:112,column:6},end:{line:114,column:7}},type:"if",locations:[{start:{line:112,column:6},end:{line:114,column:7}},{start:{line:112,column:6},end:{line:114,column:7}}],line:112},"11":{loc:{start:{line:112,column:10},end:{line:112,column:49}},type:"binary-expr",locations:[{start:{line:112,column:10},end:{line:112,column:18}},{start:{line:112,column:22},end:{line:112,column:49}}],line:112},"12":{loc:{start:{line:117,column:6},end:{line:119,column:7}},type:"if",locations:[{start:{line:117,column:6},end:{line:119,column:7}},{start:{line:117,column:6},end:{line:119,column:7}}],line:117},"13":{loc:{start:{line:117,column:10},end:{line:117,column:77}},type:"binary-expr",locations:[{start:{line:117,column:10},end:{line:117,column:29}},{start:{line:117,column:33},end:{line:117,column:77}}],line:117},"14":{loc:{start:{line:133,column:4},end:{line:139,column:5}},type:"if",locations:[{start:{line:133,column:4},end:{line:139,column:5}},{start:{line:133,column:4},end:{line:139,column:5}}],line:133},"15":{loc:{start:{line:146,column:6},end:{line:150,column:7}},type:"if",locations:[{start:{line:146,column:6},end:{line:150,column:7}},{start:{line:146,column:6},end:{line:150,column:7}}],line:146},"16":{loc:{start:{line:162,column:4},end:{line:164,column:5}},type:"if",locations:[{start:{line:162,column:4},end:{line:164,column:5}},{start:{line:162,column:4},end:{line:164,column:5}}],line:162},"17":{loc:{start:{line:168,column:4},end:{line:173,column:5}},type:"if",locations:[{start:{line:168,column:4},end:{line:173,column:5}},{start:{line:168,column:4},end:{line:173,column:5}}],line:168}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0],"8":[0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"404fc942e0383fd585aec11ad2b21f196061638b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();import LinkedListNode from'./LinkedListNode';import Comparator from'../../utils/comparator/Comparator';export default class LinkedList{/**
   * @param {Function} [comparatorFunction]
   */constructor(comparatorFunction){cov_1x726vudmc.f[0]++;cov_1x726vudmc.s[0]++;/** @var LinkedListNode */this.head=null;/** @var LinkedListNode */cov_1x726vudmc.s[1]++;this.tail=null;cov_1x726vudmc.s[2]++;this.compare=new Comparator(comparatorFunction);}/**
   * @param {*} value
   * @return {LinkedList}
   */prepend(value){cov_1x726vudmc.f[1]++;// Make new node to be a head.
const newNode=(cov_1x726vudmc.s[3]++,new LinkedListNode(value,this.head));cov_1x726vudmc.s[4]++;this.head=newNode;// If there is no tail yet let's make new node a tail.
cov_1x726vudmc.s[5]++;if(!this.tail){cov_1x726vudmc.b[0][0]++;cov_1x726vudmc.s[6]++;this.tail=newNode;}else{cov_1x726vudmc.b[0][1]++;}cov_1x726vudmc.s[7]++;return this;}/**
   * @param {*} value
   * @return {LinkedList}
   */append(value){cov_1x726vudmc.f[2]++;const newNode=(cov_1x726vudmc.s[8]++,new LinkedListNode(value));// If there is no head yet let's make new node a head.
cov_1x726vudmc.s[9]++;if(!this.head){cov_1x726vudmc.b[1][0]++;cov_1x726vudmc.s[10]++;this.head=newNode;cov_1x726vudmc.s[11]++;this.tail=newNode;cov_1x726vudmc.s[12]++;return this;}else{cov_1x726vudmc.b[1][1]++;}// Attach new node to the end of linked list.
cov_1x726vudmc.s[13]++;this.tail.next=newNode;cov_1x726vudmc.s[14]++;this.tail=newNode;cov_1x726vudmc.s[15]++;return this;}/**
   * @param {*} value
   * @return {LinkedListNode}
   */delete(value){cov_1x726vudmc.f[3]++;cov_1x726vudmc.s[16]++;if(!this.head){cov_1x726vudmc.b[2][0]++;cov_1x726vudmc.s[17]++;return null;}else{cov_1x726vudmc.b[2][1]++;}let deletedNode=(cov_1x726vudmc.s[18]++,null);// If the head must be deleted then make next node that is differ
// from the head to be a new head.
cov_1x726vudmc.s[19]++;while((cov_1x726vudmc.b[3][0]++,this.head)&&(cov_1x726vudmc.b[3][1]++,this.compare.equal(this.head.value,value))){cov_1x726vudmc.s[20]++;deletedNode=this.head;cov_1x726vudmc.s[21]++;this.head=this.head.next;}let currentNode=(cov_1x726vudmc.s[22]++,this.head);cov_1x726vudmc.s[23]++;if(currentNode!==null){cov_1x726vudmc.b[4][0]++;cov_1x726vudmc.s[24]++;// If next node must be deleted then make next node to be a next next one.
while(currentNode.next){cov_1x726vudmc.s[25]++;if(this.compare.equal(currentNode.next.value,value)){cov_1x726vudmc.b[5][0]++;cov_1x726vudmc.s[26]++;deletedNode=currentNode.next;cov_1x726vudmc.s[27]++;currentNode.next=currentNode.next.next;}else{cov_1x726vudmc.b[5][1]++;cov_1x726vudmc.s[28]++;currentNode=currentNode.next;}}}else{cov_1x726vudmc.b[4][1]++;}// Check if tail must be deleted.
cov_1x726vudmc.s[29]++;if(this.compare.equal(this.tail.value,value)){cov_1x726vudmc.b[6][0]++;cov_1x726vudmc.s[30]++;this.tail=currentNode;}else{cov_1x726vudmc.b[6][1]++;}cov_1x726vudmc.s[31]++;return deletedNode;}/**
   * @param {Object} findParams
   * @param {*} findParams.value
   * @param {function} [findParams.callback]
   * @return {LinkedListNode}
   */find({value=(cov_1x726vudmc.b[7][0]++,undefined),callback=(cov_1x726vudmc.b[8][0]++,undefined)}){cov_1x726vudmc.f[4]++;cov_1x726vudmc.s[32]++;if(!this.head){cov_1x726vudmc.b[9][0]++;cov_1x726vudmc.s[33]++;return null;}else{cov_1x726vudmc.b[9][1]++;}let currentNode=(cov_1x726vudmc.s[34]++,this.head);cov_1x726vudmc.s[35]++;while(currentNode){cov_1x726vudmc.s[36]++;// If callback is specified then try to find node by callback.
if((cov_1x726vudmc.b[11][0]++,callback)&&(cov_1x726vudmc.b[11][1]++,callback(currentNode.value))){cov_1x726vudmc.b[10][0]++;cov_1x726vudmc.s[37]++;return currentNode;}else{cov_1x726vudmc.b[10][1]++;}// If value is specified then try to compare by value..
cov_1x726vudmc.s[38]++;if((cov_1x726vudmc.b[13][0]++,value!==undefined)&&(cov_1x726vudmc.b[13][1]++,this.compare.equal(currentNode.value,value))){cov_1x726vudmc.b[12][0]++;cov_1x726vudmc.s[39]++;return currentNode;}else{cov_1x726vudmc.b[12][1]++;}cov_1x726vudmc.s[40]++;currentNode=currentNode.next;}cov_1x726vudmc.s[41]++;return null;}/**
   * @return {LinkedListNode}
   */deleteTail(){cov_1x726vudmc.f[5]++;const deletedTail=(cov_1x726vudmc.s[42]++,this.tail);cov_1x726vudmc.s[43]++;if(this.head===this.tail){cov_1x726vudmc.b[14][0]++;cov_1x726vudmc.s[44]++;// There is only one node in linked list.
this.head=null;cov_1x726vudmc.s[45]++;this.tail=null;cov_1x726vudmc.s[46]++;return deletedTail;}else{cov_1x726vudmc.b[14][1]++;}// If there are many nodes in linked list...
// Rewind to the last node and delete "next" link for the node before the last one.
let currentNode=(cov_1x726vudmc.s[47]++,this.head);cov_1x726vudmc.s[48]++;while(currentNode.next){cov_1x726vudmc.s[49]++;if(!currentNode.next.next){cov_1x726vudmc.b[15][0]++;cov_1x726vudmc.s[50]++;currentNode.next=null;}else{cov_1x726vudmc.b[15][1]++;cov_1x726vudmc.s[51]++;currentNode=currentNode.next;}}cov_1x726vudmc.s[52]++;this.tail=currentNode;cov_1x726vudmc.s[53]++;return deletedTail;}/**
   * @return {LinkedListNode}
   */deleteHead(){cov_1x726vudmc.f[6]++;cov_1x726vudmc.s[54]++;if(!this.head){cov_1x726vudmc.b[16][0]++;cov_1x726vudmc.s[55]++;return null;}else{cov_1x726vudmc.b[16][1]++;}const deletedHead=(cov_1x726vudmc.s[56]++,this.head);cov_1x726vudmc.s[57]++;if(this.head.next){cov_1x726vudmc.b[17][0]++;cov_1x726vudmc.s[58]++;this.head=this.head.next;}else{cov_1x726vudmc.b[17][1]++;cov_1x726vudmc.s[59]++;this.head=null;cov_1x726vudmc.s[60]++;this.tail=null;}cov_1x726vudmc.s[61]++;return deletedHead;}/**
   * @param {*[]} values - Array of values that need to be converted to linked list.
   * @return {LinkedList}
   */fromArray(values){cov_1x726vudmc.f[7]++;cov_1x726vudmc.s[62]++;values.forEach(value=>{cov_1x726vudmc.f[8]++;cov_1x726vudmc.s[63]++;return this.append(value);});cov_1x726vudmc.s[64]++;return this;}/**
   * @return {LinkedListNode[]}
   */toArray(){cov_1x726vudmc.f[9]++;const nodes=(cov_1x726vudmc.s[65]++,[]);let currentNode=(cov_1x726vudmc.s[66]++,this.head);cov_1x726vudmc.s[67]++;while(currentNode){cov_1x726vudmc.s[68]++;nodes.push(currentNode);cov_1x726vudmc.s[69]++;currentNode=currentNode.next;}cov_1x726vudmc.s[70]++;return nodes;}/**
   * @param {function} [callback]
   * @return {string}
   */toString(callback){cov_1x726vudmc.f[10]++;cov_1x726vudmc.s[71]++;return this.toArray().map(node=>{cov_1x726vudmc.f[11]++;cov_1x726vudmc.s[72]++;return node.toString(callback);}).toString();}/**
   * Reverse a linked list.
   * @returns {LinkedList}
   */reverse(){cov_1x726vudmc.f[12]++;let currNode=(cov_1x726vudmc.s[73]++,this.head);let prevNode=(cov_1x726vudmc.s[74]++,null);let nextNode=(cov_1x726vudmc.s[75]++,null);cov_1x726vudmc.s[76]++;while(currNode){cov_1x726vudmc.s[77]++;// Store next node.
nextNode=currNode.next;// Change next node of the current node so it would link to previous node.
cov_1x726vudmc.s[78]++;currNode.next=prevNode;// Move prevNode and currNode nodes one step forward.
cov_1x726vudmc.s[79]++;prevNode=currNode;cov_1x726vudmc.s[80]++;currNode=nextNode;}// Reset head and tail.
cov_1x726vudmc.s[81]++;this.tail=this.head;cov_1x726vudmc.s[82]++;this.head=prevNode;cov_1x726vudmc.s[83]++;return this;}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,