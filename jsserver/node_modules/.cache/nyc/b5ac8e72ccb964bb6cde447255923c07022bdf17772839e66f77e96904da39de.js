var cov_vjlweykwk=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/algorithms/graph/breadth-first-search/breadthFirstSearch.js";var hash="d1b87269d8a6a2f8de5cc6cc812a74c200c35245";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/algorithms/graph/breadth-first-search/breadthFirstSearch.js",statementMap:{"0":{start:{line:20,column:28},end:{line:20,column:37}},"1":{start:{line:22,column:23},end:{line:22,column:31}},"2":{start:{line:24,column:33},end:{line:35,column:5}},"3":{start:{line:26,column:19},end:{line:26,column:21}},"4":{start:{line:27,column:6},end:{line:33,column:8}},"5":{start:{line:28,column:8},end:{line:31,column:9}},"6":{start:{line:29,column:10},end:{line:29,column:43}},"7":{start:{line:30,column:10},end:{line:30,column:22}},"8":{start:{line:32,column:8},end:{line:32,column:21}},"9":{start:{line:37,column:2},end:{line:37,column:88}},"10":{start:{line:38,column:2},end:{line:38,column:72}},"11":{start:{line:39,column:2},end:{line:39,column:72}},"12":{start:{line:41,column:2},end:{line:41,column:27}},"13":{start:{line:50,column:20},end:{line:50,column:52}},"14":{start:{line:51,column:22},end:{line:51,column:33}},"15":{start:{line:54,column:2},end:{line:54,column:35}},"16":{start:{line:56,column:23},end:{line:56,column:27}},"17":{start:{line:59,column:2},end:{line:74,column:3}},"18":{start:{line:60,column:26},end:{line:60,column:47}},"19":{start:{line:61,column:4},end:{line:61,column:61}},"20":{start:{line:64,column:4},end:{line:68,column:7}},"21":{start:{line:65,column:6},end:{line:67,column:7}},"22":{start:{line:66,column:8},end:{line:66,column:40}},"23":{start:{line:70,column:4},end:{line:70,column:61}},"24":{start:{line:73,column:4},end:{line:73,column:35}}},fnMap:{"0":{name:"initCallbacks",decl:{start:{line:19,column:9},end:{line:19,column:22}},loc:{start:{line:19,column:39},end:{line:42,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:23},end:{line:22,column:24}},loc:{start:{line:22,column:29},end:{line:22,column:31}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:4},end:{line:25,column:5}},loc:{start:{line:25,column:10},end:{line:34,column:5}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:27,column:13},end:{line:27,column:14}},loc:{start:{line:27,column:33},end:{line:33,column:7}},line:27},"4":{name:"breadthFirstSearch",decl:{start:{line:49,column:24},end:{line:49,column:42}},loc:{start:{line:49,column:82},end:{line:75,column:1}},line:49},"5":{name:"(anonymous_5)",decl:{start:{line:64,column:46},end:{line:64,column:47}},loc:{start:{line:64,column:62},end:{line:68,column:5}},line:64}},branchMap:{"0":{loc:{start:{line:19,column:23},end:{line:19,column:37}},type:"default-arg",locations:[{start:{line:19,column:35},end:{line:19,column:37}}],line:19},"1":{loc:{start:{line:28,column:8},end:{line:31,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:31,column:9}},{start:{line:28,column:8},end:{line:31,column:9}}],line:28},"2":{loc:{start:{line:37,column:37},end:{line:37,column:87}},type:"binary-expr",locations:[{start:{line:37,column:37},end:{line:37,column:61}},{start:{line:37,column:65},end:{line:37,column:87}}],line:37},"3":{loc:{start:{line:38,column:34},end:{line:38,column:71}},type:"binary-expr",locations:[{start:{line:38,column:34},end:{line:38,column:55}},{start:{line:38,column:59},end:{line:38,column:71}}],line:38},"4":{loc:{start:{line:39,column:34},end:{line:39,column:71}},type:"binary-expr",locations:[{start:{line:39,column:34},end:{line:39,column:55}},{start:{line:39,column:59},end:{line:39,column:71}}],line:39},"5":{loc:{start:{line:65,column:6},end:{line:67,column:7}},type:"if",locations:[{start:{line:65,column:6},end:{line:67,column:7}},{start:{line:65,column:6},end:{line:67,column:7}}],line:65}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"d1b87269d8a6a2f8de5cc6cc812a74c200c35245"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();import Queue from'../../../data-structures/queue/Queue';/**
 * @typedef {Object} Callbacks
 *
 * @property {function(vertices: Object): boolean} [allowTraversal] -
 *   Determines whether DFS should traverse from the vertex to its neighbor
 *   (along the edge). By default prohibits visiting the same vertex again.
 *
 * @property {function(vertices: Object)} [enterVertex] - Called when BFS enters the vertex.
 *
 * @property {function(vertices: Object)} [leaveVertex] - Called when BFS leaves the vertex.
 */ /**
 * @param {Callbacks} [callbacks]
 * @returns {Callbacks}
 */function initCallbacks(callbacks=(cov_vjlweykwk.b[0][0]++,{})){cov_vjlweykwk.f[0]++;const initiatedCallback=(cov_vjlweykwk.s[0]++,callbacks);cov_vjlweykwk.s[1]++;const stubCallback=()=>{cov_vjlweykwk.f[1]++;};const allowTraversalCallback=(cov_vjlweykwk.s[2]++,(()=>{cov_vjlweykwk.f[2]++;const seen=(cov_vjlweykwk.s[3]++,{});cov_vjlweykwk.s[4]++;return({nextVertex})=>{cov_vjlweykwk.f[3]++;cov_vjlweykwk.s[5]++;if(!seen[nextVertex.getKey()]){cov_vjlweykwk.b[1][0]++;cov_vjlweykwk.s[6]++;seen[nextVertex.getKey()]=true;cov_vjlweykwk.s[7]++;return true;}else{cov_vjlweykwk.b[1][1]++;}cov_vjlweykwk.s[8]++;return false;};})());cov_vjlweykwk.s[9]++;initiatedCallback.allowTraversal=(cov_vjlweykwk.b[2][0]++,callbacks.allowTraversal)||(cov_vjlweykwk.b[2][1]++,allowTraversalCallback);cov_vjlweykwk.s[10]++;initiatedCallback.enterVertex=(cov_vjlweykwk.b[3][0]++,callbacks.enterVertex)||(cov_vjlweykwk.b[3][1]++,stubCallback);cov_vjlweykwk.s[11]++;initiatedCallback.leaveVertex=(cov_vjlweykwk.b[4][0]++,callbacks.leaveVertex)||(cov_vjlweykwk.b[4][1]++,stubCallback);cov_vjlweykwk.s[12]++;return initiatedCallback;}/**
 * @param {Graph} graph
 * @param {GraphVertex} startVertex
 * @param {Callbacks} [originalCallbacks]
 */export default function breadthFirstSearch(graph,startVertex,originalCallbacks){cov_vjlweykwk.f[4]++;const callbacks=(cov_vjlweykwk.s[13]++,initCallbacks(originalCallbacks));const vertexQueue=(cov_vjlweykwk.s[14]++,new Queue());// Do initial queue setup.
cov_vjlweykwk.s[15]++;vertexQueue.enqueue(startVertex);let previousVertex=(cov_vjlweykwk.s[16]++,null);// Traverse all vertices from the queue.
cov_vjlweykwk.s[17]++;while(!vertexQueue.isEmpty()){const currentVertex=(cov_vjlweykwk.s[18]++,vertexQueue.dequeue());cov_vjlweykwk.s[19]++;callbacks.enterVertex({currentVertex,previousVertex});// Add all neighbors to the queue for future traversals.
cov_vjlweykwk.s[20]++;graph.getNeighbors(currentVertex).forEach(nextVertex=>{cov_vjlweykwk.f[5]++;cov_vjlweykwk.s[21]++;if(callbacks.allowTraversal({previousVertex,currentVertex,nextVertex})){cov_vjlweykwk.b[5][0]++;cov_vjlweykwk.s[22]++;vertexQueue.enqueue(nextVertex);}else{cov_vjlweykwk.b[5][1]++;}});cov_vjlweykwk.s[23]++;callbacks.leaveVertex({currentVertex,previousVertex});// Memorize current vertex before next loop.
cov_vjlweykwk.s[24]++;previousVertex=currentVertex;}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYi9sYXRsaWIvanNzZXJ2ZXIvamF2YXNjcmlwdC1hbGdvcml0aG1zL3NyYy9hbGdvcml0aG1zL2dyYXBoL2JyZWFkdGgtZmlyc3Qtc2VhcmNoL2JyZWFkdGhGaXJzdFNlYXJjaC5qcyJdLCJuYW1lcyI6WyJRdWV1ZSIsImluaXRDYWxsYmFja3MiLCJjYWxsYmFja3MiLCJpbml0aWF0ZWRDYWxsYmFjayIsInN0dWJDYWxsYmFjayIsImFsbG93VHJhdmVyc2FsQ2FsbGJhY2siLCJzZWVuIiwibmV4dFZlcnRleCIsImdldEtleSIsImFsbG93VHJhdmVyc2FsIiwiZW50ZXJWZXJ0ZXgiLCJsZWF2ZVZlcnRleCIsImJyZWFkdGhGaXJzdFNlYXJjaCIsImdyYXBoIiwic3RhcnRWZXJ0ZXgiLCJvcmlnaW5hbENhbGxiYWNrcyIsInZlcnRleFF1ZXVlIiwiZW5xdWV1ZSIsInByZXZpb3VzVmVydGV4IiwiaXNFbXB0eSIsImN1cnJlbnRWZXJ0ZXgiLCJkZXF1ZXVlIiwiZ2V0TmVpZ2hib3JzIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6Ijh5SUFBQSxNQUFPQSxDQUFBQSxLQUFQLEtBQWtCLHNDQUFsQixDQUVBOzs7Ozs7Ozs7O0lBWUE7OztHQUlBLFFBQVNDLENBQUFBLGFBQVQsQ0FBdUJDLFNBQVMsMEJBQUcsRUFBSCxDQUFoQyxDQUF1QyxzQkFDckMsS0FBTUMsQ0FBQUEsaUJBQWlCLHVCQUFHRCxTQUFILENBQXZCLENBRHFDLHFCQUdyQyxLQUFNRSxDQUFBQSxZQUFZLENBQUcsSUFBTSxzQkFBRSxDQUE3QixDQUVBLEtBQU1DLENBQUFBLHNCQUFzQix1QkFBRyxDQUM3QixJQUFNLHNCQUNKLEtBQU1DLENBQUFBLElBQUksdUJBQUcsRUFBSCxDQUFWLENBREkscUJBRUosTUFBTyxDQUFDLENBQUVDLFVBQUYsQ0FBRCxHQUFvQiwyQ0FDekIsR0FBSSxDQUFDRCxJQUFJLENBQUNDLFVBQVUsQ0FBQ0MsTUFBWCxFQUFELENBQVQsQ0FBZ0MsOENBQzlCRixJQUFJLENBQUNDLFVBQVUsQ0FBQ0MsTUFBWCxFQUFELENBQUosQ0FBNEIsSUFBNUIsQ0FEOEIscUJBRTlCLE1BQU8sS0FBUCxDQUNELENBSEQsOEJBRHlCLHFCQUt6QixNQUFPLE1BQVAsQ0FDRCxDQU5ELENBT0QsQ0FWNEIsR0FBSCxDQUE1QixDQUxxQyxxQkFrQnJDTCxpQkFBaUIsQ0FBQ00sY0FBbEIsQ0FBbUMseUJBQUFQLFNBQVMsQ0FBQ08sY0FBViw0QkFBNEJKLHNCQUE1QixDQUFuQyxDQWxCcUMsc0JBbUJyQ0YsaUJBQWlCLENBQUNPLFdBQWxCLENBQWdDLHlCQUFBUixTQUFTLENBQUNRLFdBQVYsNEJBQXlCTixZQUF6QixDQUFoQyxDQW5CcUMsc0JBb0JyQ0QsaUJBQWlCLENBQUNRLFdBQWxCLENBQWdDLHlCQUFBVCxTQUFTLENBQUNTLFdBQVYsNEJBQXlCUCxZQUF6QixDQUFoQyxDQXBCcUMsc0JBc0JyQyxNQUFPRCxDQUFBQSxpQkFBUCxDQUNELENBRUQ7Ozs7R0FLQSxjQUFlLFNBQVNTLENBQUFBLGtCQUFULENBQTRCQyxLQUE1QixDQUFtQ0MsV0FBbkMsQ0FBZ0RDLGlCQUFoRCxDQUFtRSxzQkFDaEYsS0FBTWIsQ0FBQUEsU0FBUyx3QkFBR0QsYUFBYSxDQUFDYyxpQkFBRCxDQUFoQixDQUFmLENBQ0EsS0FBTUMsQ0FBQUEsV0FBVyx3QkFBRyxHQUFJaEIsQ0FBQUEsS0FBSixFQUFILENBQWpCLENBRUE7QUFKZ0Ysc0JBS2hGZ0IsV0FBVyxDQUFDQyxPQUFaLENBQW9CSCxXQUFwQixFQUVBLEdBQUlJLENBQUFBLGNBQWMsd0JBQUcsSUFBSCxDQUFsQixDQUVBO0FBVGdGLHNCQVVoRixNQUFPLENBQUNGLFdBQVcsQ0FBQ0csT0FBWixFQUFSLENBQStCLENBQzdCLEtBQU1DLENBQUFBLGFBQWEsd0JBQUdKLFdBQVcsQ0FBQ0ssT0FBWixFQUFILENBQW5CLENBRDZCLHNCQUU3Qm5CLFNBQVMsQ0FBQ1EsV0FBVixDQUFzQixDQUFFVSxhQUFGLENBQWlCRixjQUFqQixDQUF0QixFQUVBO0FBSjZCLHNCQUs3QkwsS0FBSyxDQUFDUyxZQUFOLENBQW1CRixhQUFuQixFQUFrQ0csT0FBbEMsQ0FBMkNoQixVQUFELEVBQWdCLDRDQUN4RCxHQUFJTCxTQUFTLENBQUNPLGNBQVYsQ0FBeUIsQ0FBRVMsY0FBRixDQUFrQkUsYUFBbEIsQ0FBaUNiLFVBQWpDLENBQXpCLENBQUosQ0FBNkUsK0NBQzNFUyxXQUFXLENBQUNDLE9BQVosQ0FBb0JWLFVBQXBCLEVBQ0QsQ0FGRCw4QkFHRCxDQUpELEVBTDZCLHNCQVc3QkwsU0FBUyxDQUFDUyxXQUFWLENBQXNCLENBQUVTLGFBQUYsQ0FBaUJGLGNBQWpCLENBQXRCLEVBRUE7QUFiNkIsc0JBYzdCQSxjQUFjLENBQUdFLGFBQWpCLENBQ0QsQ0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBRdWV1ZSBmcm9tICcuLi8uLi8uLi9kYXRhLXN0cnVjdHVyZXMvcXVldWUvUXVldWUnO1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IENhbGxiYWNrc1xuICpcbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb24odmVydGljZXM6IE9iamVjdCk6IGJvb2xlYW59IFthbGxvd1RyYXZlcnNhbF0gLVxuICogICBEZXRlcm1pbmVzIHdoZXRoZXIgREZTIHNob3VsZCB0cmF2ZXJzZSBmcm9tIHRoZSB2ZXJ0ZXggdG8gaXRzIG5laWdoYm9yXG4gKiAgIChhbG9uZyB0aGUgZWRnZSkuIEJ5IGRlZmF1bHQgcHJvaGliaXRzIHZpc2l0aW5nIHRoZSBzYW1lIHZlcnRleCBhZ2Fpbi5cbiAqXG4gKiBAcHJvcGVydHkge2Z1bmN0aW9uKHZlcnRpY2VzOiBPYmplY3QpfSBbZW50ZXJWZXJ0ZXhdIC0gQ2FsbGVkIHdoZW4gQkZTIGVudGVycyB0aGUgdmVydGV4LlxuICpcbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb24odmVydGljZXM6IE9iamVjdCl9IFtsZWF2ZVZlcnRleF0gLSBDYWxsZWQgd2hlbiBCRlMgbGVhdmVzIHRoZSB2ZXJ0ZXguXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0NhbGxiYWNrc30gW2NhbGxiYWNrc11cbiAqIEByZXR1cm5zIHtDYWxsYmFja3N9XG4gKi9cbmZ1bmN0aW9uIGluaXRDYWxsYmFja3MoY2FsbGJhY2tzID0ge30pIHtcbiAgY29uc3QgaW5pdGlhdGVkQ2FsbGJhY2sgPSBjYWxsYmFja3M7XG5cbiAgY29uc3Qgc3R1YkNhbGxiYWNrID0gKCkgPT4ge307XG5cbiAgY29uc3QgYWxsb3dUcmF2ZXJzYWxDYWxsYmFjayA9IChcbiAgICAoKSA9PiB7XG4gICAgICBjb25zdCBzZWVuID0ge307XG4gICAgICByZXR1cm4gKHsgbmV4dFZlcnRleCB9KSA9PiB7XG4gICAgICAgIGlmICghc2VlbltuZXh0VmVydGV4LmdldEtleSgpXSkge1xuICAgICAgICAgIHNlZW5bbmV4dFZlcnRleC5nZXRLZXkoKV0gPSB0cnVlO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH07XG4gICAgfVxuICApKCk7XG5cbiAgaW5pdGlhdGVkQ2FsbGJhY2suYWxsb3dUcmF2ZXJzYWwgPSBjYWxsYmFja3MuYWxsb3dUcmF2ZXJzYWwgfHwgYWxsb3dUcmF2ZXJzYWxDYWxsYmFjaztcbiAgaW5pdGlhdGVkQ2FsbGJhY2suZW50ZXJWZXJ0ZXggPSBjYWxsYmFja3MuZW50ZXJWZXJ0ZXggfHwgc3R1YkNhbGxiYWNrO1xuICBpbml0aWF0ZWRDYWxsYmFjay5sZWF2ZVZlcnRleCA9IGNhbGxiYWNrcy5sZWF2ZVZlcnRleCB8fCBzdHViQ2FsbGJhY2s7XG5cbiAgcmV0dXJuIGluaXRpYXRlZENhbGxiYWNrO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7R3JhcGh9IGdyYXBoXG4gKiBAcGFyYW0ge0dyYXBoVmVydGV4fSBzdGFydFZlcnRleFxuICogQHBhcmFtIHtDYWxsYmFja3N9IFtvcmlnaW5hbENhbGxiYWNrc11cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnJlYWR0aEZpcnN0U2VhcmNoKGdyYXBoLCBzdGFydFZlcnRleCwgb3JpZ2luYWxDYWxsYmFja3MpIHtcbiAgY29uc3QgY2FsbGJhY2tzID0gaW5pdENhbGxiYWNrcyhvcmlnaW5hbENhbGxiYWNrcyk7XG4gIGNvbnN0IHZlcnRleFF1ZXVlID0gbmV3IFF1ZXVlKCk7XG5cbiAgLy8gRG8gaW5pdGlhbCBxdWV1ZSBzZXR1cC5cbiAgdmVydGV4UXVldWUuZW5xdWV1ZShzdGFydFZlcnRleCk7XG5cbiAgbGV0IHByZXZpb3VzVmVydGV4ID0gbnVsbDtcblxuICAvLyBUcmF2ZXJzZSBhbGwgdmVydGljZXMgZnJvbSB0aGUgcXVldWUuXG4gIHdoaWxlICghdmVydGV4UXVldWUuaXNFbXB0eSgpKSB7XG4gICAgY29uc3QgY3VycmVudFZlcnRleCA9IHZlcnRleFF1ZXVlLmRlcXVldWUoKTtcbiAgICBjYWxsYmFja3MuZW50ZXJWZXJ0ZXgoeyBjdXJyZW50VmVydGV4LCBwcmV2aW91c1ZlcnRleCB9KTtcblxuICAgIC8vIEFkZCBhbGwgbmVpZ2hib3JzIHRvIHRoZSBxdWV1ZSBmb3IgZnV0dXJlIHRyYXZlcnNhbHMuXG4gICAgZ3JhcGguZ2V0TmVpZ2hib3JzKGN1cnJlbnRWZXJ0ZXgpLmZvckVhY2goKG5leHRWZXJ0ZXgpID0+IHtcbiAgICAgIGlmIChjYWxsYmFja3MuYWxsb3dUcmF2ZXJzYWwoeyBwcmV2aW91c1ZlcnRleCwgY3VycmVudFZlcnRleCwgbmV4dFZlcnRleCB9KSkge1xuICAgICAgICB2ZXJ0ZXhRdWV1ZS5lbnF1ZXVlKG5leHRWZXJ0ZXgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgY2FsbGJhY2tzLmxlYXZlVmVydGV4KHsgY3VycmVudFZlcnRleCwgcHJldmlvdXNWZXJ0ZXggfSk7XG5cbiAgICAvLyBNZW1vcml6ZSBjdXJyZW50IHZlcnRleCBiZWZvcmUgbmV4dCBsb29wLlxuICAgIHByZXZpb3VzVmVydGV4ID0gY3VycmVudFZlcnRleDtcbiAgfVxufVxuIl19