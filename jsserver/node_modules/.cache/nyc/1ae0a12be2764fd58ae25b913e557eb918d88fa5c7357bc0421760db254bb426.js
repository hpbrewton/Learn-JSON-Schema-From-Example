"use strict";var cov_1dzqj430xy=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/build/algorithms/math/fibonacci/fibonacciNthClosedForm.js";var hash="87b79abd72829c589fc299bbb9c0ae35ec02b05b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/build/algorithms/math/fibonacci/fibonacciNthClosedForm.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:41}},"2":{start:{line:16,column:28},end:{line:16,column:30}},"3":{start:{line:18,column:2},end:{line:20,column:3}},"4":{start:{line:19,column:4},end:{line:19,column:105}},"5":{start:{line:23,column:14},end:{line:23,column:26}},"6":{start:{line:25,column:12},end:{line:25,column:27}},"7":{start:{line:27,column:2},end:{line:27,column:59}}},fnMap:{"0":{name:"fibonacciClosedForm",decl:{start:{line:15,column:9},end:{line:15,column:28}},loc:{start:{line:15,column:39},end:{line:28,column:1}},line:15}},branchMap:{"0":{loc:{start:{line:18,column:2},end:{line:20,column:3}},type:"if",locations:[{start:{line:18,column:2},end:{line:20,column:3}},{start:{line:18,column:2},end:{line:20,column:3}}],line:18},"1":{loc:{start:{line:18,column:6},end:{line:18,column:52}},type:"binary-expr",locations:[{start:{line:18,column:6},end:{line:18,column:18}},{start:{line:18,column:22},end:{line:18,column:52}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"87b79abd72829c589fc299bbb9c0ae35ec02b05b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_1dzqj430xy.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1dzqj430xy.s[1]++;exports["default"]=fibonacciClosedForm;/**
 * Calculate fibonacci number at specific position using closed form function (Binet's formula).
 * @see: https://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression
 *
 * @param {number} position - Position number of fibonacci sequence (must be number from 1 to 75).
 * @return {number}
 */function fibonacciClosedForm(position){cov_1dzqj430xy.f[0]++;var topMaxValidPosition=(cov_1dzqj430xy.s[2]++,70);// Check that position is valid.
cov_1dzqj430xy.s[3]++;if((cov_1dzqj430xy.b[1][0]++,position<1)||(cov_1dzqj430xy.b[1][1]++,position>topMaxValidPosition)){cov_1dzqj430xy.b[0][0]++;cov_1dzqj430xy.s[4]++;throw new Error("Can't handle position smaller than 1 or greater than ".concat(topMaxValidPosition));}else{cov_1dzqj430xy.b[0][1]++;}// Calculate √5 to re-use it in further formulas.
var sqrt5=(cov_1dzqj430xy.s[5]++,Math.sqrt(5));// Calculate φ constant (≈ 1.61803).
var phi=(cov_1dzqj430xy.s[6]++,(1+sqrt5)/2);// Calculate fibonacci number using Binet's formula.
cov_1dzqj430xy.s[7]++;return Math.floor(Math.pow(phi,position)/sqrt5+0.5);}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYi9sYXRsaWIvanNzZXJ2ZXIvamF2YXNjcmlwdC1hbGdvcml0aG1zL2J1aWxkL2FsZ29yaXRobXMvbWF0aC9maWJvbmFjY2kvZmlib25hY2NpTnRoQ2xvc2VkRm9ybS5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImZpYm9uYWNjaUNsb3NlZEZvcm0iLCJwb3NpdGlvbiIsInRvcE1heFZhbGlkUG9zaXRpb24iLCJFcnJvciIsImNvbmNhdCIsInNxcnQ1IiwiTWF0aCIsInNxcnQiLCJwaGkiLCJmbG9vciIsInBvdyJdLCJtYXBwaW5ncyI6IkFBQUEsYSxvdkRBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsQ0FBK0IsWUFBL0IsQ0FBNkMsQ0FDM0NDLEtBQUssQ0FBRSxJQURvQyxDQUE3QyxFLHNCQUdBRCxPQUFPLENBQUMsU0FBRCxDQUFQLENBQXFCRSxtQkFBckIsQ0FFQTs7Ozs7O0dBT0EsUUFBU0EsQ0FBQUEsbUJBQVQsQ0FBNkJDLFFBQTdCLENBQXVDLHVCQUNyQyxHQUFJQyxDQUFBQSxtQkFBbUIsd0JBQUcsRUFBSCxDQUF2QixDQUE4QjtBQURPLHNCQUdyQyxHQUFJLDBCQUFBRCxRQUFRLENBQUcsQ0FBWCw2QkFBZ0JBLFFBQVEsQ0FBR0MsbUJBQTNCLENBQUosQ0FBb0QsZ0RBQ2xELEtBQU0sSUFBSUMsQ0FBQUEsS0FBSixDQUFVLHdEQUF3REMsTUFBeEQsQ0FBK0RGLG1CQUEvRCxDQUFWLENBQU4sQ0FDRCxDQUZELCtCQUVFO0FBR0YsR0FBSUcsQ0FBQUEsS0FBSyx3QkFBR0MsSUFBSSxDQUFDQyxJQUFMLENBQVUsQ0FBVixDQUFILENBQVQsQ0FBMEI7QUFFMUIsR0FBSUMsQ0FBQUEsR0FBRyx3QkFBRyxDQUFDLEVBQUlILEtBQUwsRUFBYyxDQUFqQixDQUFQLENBQTJCO0FBVlUsc0JBWXJDLE1BQU9DLENBQUFBLElBQUksQ0FBQ0csS0FBTCxDQUFXSCxJQUFJLENBQUNJLEdBQUwsQ0FBU0YsR0FBVCxDQUFjUCxRQUFkLEVBQTBCSSxLQUExQixDQUFrQyxHQUE3QyxDQUFQLENBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZmlib25hY2NpQ2xvc2VkRm9ybTtcblxuLyoqXG4gKiBDYWxjdWxhdGUgZmlib25hY2NpIG51bWJlciBhdCBzcGVjaWZpYyBwb3NpdGlvbiB1c2luZyBjbG9zZWQgZm9ybSBmdW5jdGlvbiAoQmluZXQncyBmb3JtdWxhKS5cbiAqIEBzZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0ZpYm9uYWNjaV9udW1iZXIjQ2xvc2VkLWZvcm1fZXhwcmVzc2lvblxuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NpdGlvbiAtIFBvc2l0aW9uIG51bWJlciBvZiBmaWJvbmFjY2kgc2VxdWVuY2UgKG11c3QgYmUgbnVtYmVyIGZyb20gMSB0byA3NSkuXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIGZpYm9uYWNjaUNsb3NlZEZvcm0ocG9zaXRpb24pIHtcbiAgdmFyIHRvcE1heFZhbGlkUG9zaXRpb24gPSA3MDsgLy8gQ2hlY2sgdGhhdCBwb3NpdGlvbiBpcyB2YWxpZC5cblxuICBpZiAocG9zaXRpb24gPCAxIHx8IHBvc2l0aW9uID4gdG9wTWF4VmFsaWRQb3NpdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbid0IGhhbmRsZSBwb3NpdGlvbiBzbWFsbGVyIHRoYW4gMSBvciBncmVhdGVyIHRoYW4gXCIuY29uY2F0KHRvcE1heFZhbGlkUG9zaXRpb24pKTtcbiAgfSAvLyBDYWxjdWxhdGUg4oiaNSB0byByZS11c2UgaXQgaW4gZnVydGhlciBmb3JtdWxhcy5cblxuXG4gIHZhciBzcXJ0NSA9IE1hdGguc3FydCg1KTsgLy8gQ2FsY3VsYXRlIM+GIGNvbnN0YW50ICjiiYggMS42MTgwMykuXG5cbiAgdmFyIHBoaSA9ICgxICsgc3FydDUpIC8gMjsgLy8gQ2FsY3VsYXRlIGZpYm9uYWNjaSBudW1iZXIgdXNpbmcgQmluZXQncyBmb3JtdWxhLlxuXG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucG93KHBoaSwgcG9zaXRpb24pIC8gc3FydDUgKyAwLjUpO1xufSJdfQ==