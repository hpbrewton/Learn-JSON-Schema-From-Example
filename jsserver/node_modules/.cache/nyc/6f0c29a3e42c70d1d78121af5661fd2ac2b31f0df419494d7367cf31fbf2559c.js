var cov_g7mokkbz5=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/disjoint-set/DisjointSet.js";var hash="8f4ca8f4769aeb8ff6167751749f329753881a10";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/disjoint-set/DisjointSet.js",statementMap:{"0":{start:{line:8,column:4},end:{line:8,column:35}},"1":{start:{line:9,column:4},end:{line:9,column:20}},"2":{start:{line:17,column:28},end:{line:17,column:76}},"3":{start:{line:19,column:4},end:{line:22,column:5}},"4":{start:{line:21,column:6},end:{line:21,column:61}},"5":{start:{line:24,column:4},end:{line:24,column:16}},"6":{start:{line:34,column:33},end:{line:34,column:81}},"7":{start:{line:37,column:33},end:{line:37,column:74}},"8":{start:{line:39,column:4},end:{line:41,column:5}},"9":{start:{line:40,column:6},end:{line:40,column:18}},"10":{start:{line:43,column:4},end:{line:43,column:51}},"11":{start:{line:54,column:21},end:{line:54,column:38}},"12":{start:{line:55,column:21},end:{line:55,column:38}},"13":{start:{line:57,column:4},end:{line:59,column:5}},"14":{start:{line:58,column:6},end:{line:58,column:59}},"15":{start:{line:61,column:4},end:{line:64,column:5}},"16":{start:{line:63,column:6},end:{line:63,column:18}},"17":{start:{line:66,column:18},end:{line:66,column:38}},"18":{start:{line:67,column:18},end:{line:67,column:38}},"19":{start:{line:69,column:4},end:{line:74,column:5}},"20":{start:{line:71,column:6},end:{line:71,column:28}},"21":{start:{line:73,column:6},end:{line:73,column:18}},"22":{start:{line:77,column:4},end:{line:77,column:26}},"23":{start:{line:79,column:4},end:{line:79,column:16}},"24":{start:{line:88,column:21},end:{line:88,column:38}},"25":{start:{line:89,column:21},end:{line:89,column:38}},"26":{start:{line:91,column:4},end:{line:93,column:5}},"27":{start:{line:92,column:6},end:{line:92,column:59}},"28":{start:{line:95,column:4},end:{line:95,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:2},end:{line:7,column:3}},loc:{start:{line:7,column:27},end:{line:10,column:3}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:2},end:{line:16,column:3}},loc:{start:{line:16,column:21},end:{line:25,column:3}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:33,column:2},end:{line:33,column:3}},loc:{start:{line:33,column:18},end:{line:44,column:3}},line:33},"3":{name:"(anonymous_3)",decl:{start:{line:53,column:2},end:{line:53,column:3}},loc:{start:{line:53,column:24},end:{line:80,column:3}},line:53},"4":{name:"(anonymous_4)",decl:{start:{line:87,column:2},end:{line:87,column:3}},loc:{start:{line:87,column:28},end:{line:96,column:3}},line:87}},branchMap:{"0":{loc:{start:{line:19,column:4},end:{line:22,column:5}},type:"if",locations:[{start:{line:19,column:4},end:{line:22,column:5}},{start:{line:19,column:4},end:{line:22,column:5}}],line:19},"1":{loc:{start:{line:39,column:4},end:{line:41,column:5}},type:"if",locations:[{start:{line:39,column:4},end:{line:41,column:5}},{start:{line:39,column:4},end:{line:41,column:5}}],line:39},"2":{loc:{start:{line:57,column:4},end:{line:59,column:5}},type:"if",locations:[{start:{line:57,column:4},end:{line:59,column:5}},{start:{line:57,column:4},end:{line:59,column:5}}],line:57},"3":{loc:{start:{line:57,column:8},end:{line:57,column:46}},type:"binary-expr",locations:[{start:{line:57,column:8},end:{line:57,column:25}},{start:{line:57,column:29},end:{line:57,column:46}}],line:57},"4":{loc:{start:{line:61,column:4},end:{line:64,column:5}},type:"if",locations:[{start:{line:61,column:4},end:{line:64,column:5}},{start:{line:61,column:4},end:{line:64,column:5}}],line:61},"5":{loc:{start:{line:69,column:4},end:{line:74,column:5}},type:"if",locations:[{start:{line:69,column:4},end:{line:74,column:5}},{start:{line:69,column:4},end:{line:74,column:5}}],line:69},"6":{loc:{start:{line:91,column:4},end:{line:93,column:5}},type:"if",locations:[{start:{line:91,column:4},end:{line:93,column:5}},{start:{line:91,column:4},end:{line:93,column:5}}],line:91},"7":{loc:{start:{line:91,column:8},end:{line:91,column:46}},type:"binary-expr",locations:[{start:{line:91,column:8},end:{line:91,column:25}},{start:{line:91,column:29},end:{line:91,column:46}}],line:91}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"8f4ca8f4769aeb8ff6167751749f329753881a10"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();import DisjointSetItem from'./DisjointSetItem';export default class DisjointSet{/**
   * @param {function(value: *)} [keyCallback]
   */constructor(keyCallback){cov_g7mokkbz5.f[0]++;cov_g7mokkbz5.s[0]++;this.keyCallback=keyCallback;cov_g7mokkbz5.s[1]++;this.items={};}/**
   * @param {*} itemValue
   * @return {DisjointSet}
   */makeSet(itemValue){cov_g7mokkbz5.f[1]++;const disjointSetItem=(cov_g7mokkbz5.s[2]++,new DisjointSetItem(itemValue,this.keyCallback));cov_g7mokkbz5.s[3]++;if(!this.items[disjointSetItem.getKey()]){cov_g7mokkbz5.b[0][0]++;cov_g7mokkbz5.s[4]++;// Add new item only in case if it not presented yet.
this.items[disjointSetItem.getKey()]=disjointSetItem;}else{cov_g7mokkbz5.b[0][1]++;}cov_g7mokkbz5.s[5]++;return this;}/**
   * Find set representation node.
   *
   * @param {*} itemValue
   * @return {(string|null)}
   */find(itemValue){cov_g7mokkbz5.f[2]++;const templateDisjointItem=(cov_g7mokkbz5.s[6]++,new DisjointSetItem(itemValue,this.keyCallback));// Try to find item itself;
const requiredDisjointItem=(cov_g7mokkbz5.s[7]++,this.items[templateDisjointItem.getKey()]);cov_g7mokkbz5.s[8]++;if(!requiredDisjointItem){cov_g7mokkbz5.b[1][0]++;cov_g7mokkbz5.s[9]++;return null;}else{cov_g7mokkbz5.b[1][1]++;}cov_g7mokkbz5.s[10]++;return requiredDisjointItem.getRoot().getKey();}/**
   * Union by rank.
   *
   * @param {*} valueA
   * @param {*} valueB
   * @return {DisjointSet}
   */union(valueA,valueB){cov_g7mokkbz5.f[3]++;const rootKeyA=(cov_g7mokkbz5.s[11]++,this.find(valueA));const rootKeyB=(cov_g7mokkbz5.s[12]++,this.find(valueB));cov_g7mokkbz5.s[13]++;if((cov_g7mokkbz5.b[3][0]++,rootKeyA===null)||(cov_g7mokkbz5.b[3][1]++,rootKeyB===null)){cov_g7mokkbz5.b[2][0]++;cov_g7mokkbz5.s[14]++;throw new Error('One or two values are not in sets');}else{cov_g7mokkbz5.b[2][1]++;}cov_g7mokkbz5.s[15]++;if(rootKeyA===rootKeyB){cov_g7mokkbz5.b[4][0]++;cov_g7mokkbz5.s[16]++;// In case if both elements are already in the same set then just return its key.
return this;}else{cov_g7mokkbz5.b[4][1]++;}const rootA=(cov_g7mokkbz5.s[17]++,this.items[rootKeyA]);const rootB=(cov_g7mokkbz5.s[18]++,this.items[rootKeyB]);cov_g7mokkbz5.s[19]++;if(rootA.getRank()<rootB.getRank()){cov_g7mokkbz5.b[5][0]++;cov_g7mokkbz5.s[20]++;// If rootB's tree is bigger then make rootB to be a new root.
rootB.addChild(rootA);cov_g7mokkbz5.s[21]++;return this;}else{cov_g7mokkbz5.b[5][1]++;}// If rootA's tree is bigger then make rootA to be a new root.
cov_g7mokkbz5.s[22]++;rootA.addChild(rootB);cov_g7mokkbz5.s[23]++;return this;}/**
   * @param {*} valueA
   * @param {*} valueB
   * @return {boolean}
   */inSameSet(valueA,valueB){cov_g7mokkbz5.f[4]++;const rootKeyA=(cov_g7mokkbz5.s[24]++,this.find(valueA));const rootKeyB=(cov_g7mokkbz5.s[25]++,this.find(valueB));cov_g7mokkbz5.s[26]++;if((cov_g7mokkbz5.b[7][0]++,rootKeyA===null)||(cov_g7mokkbz5.b[7][1]++,rootKeyB===null)){cov_g7mokkbz5.b[6][0]++;cov_g7mokkbz5.s[27]++;throw new Error('One or two values are not in sets');}else{cov_g7mokkbz5.b[6][1]++;}cov_g7mokkbz5.s[28]++;return rootKeyA===rootKeyB;}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYi9sYXRsaWIvanNzZXJ2ZXIvamF2YXNjcmlwdC1hbGdvcml0aG1zL3NyYy9kYXRhLXN0cnVjdHVyZXMvZGlzam9pbnQtc2V0L0Rpc2pvaW50U2V0LmpzIl0sIm5hbWVzIjpbIkRpc2pvaW50U2V0SXRlbSIsIkRpc2pvaW50U2V0IiwiY29uc3RydWN0b3IiLCJrZXlDYWxsYmFjayIsIml0ZW1zIiwibWFrZVNldCIsIml0ZW1WYWx1ZSIsImRpc2pvaW50U2V0SXRlbSIsImdldEtleSIsImZpbmQiLCJ0ZW1wbGF0ZURpc2pvaW50SXRlbSIsInJlcXVpcmVkRGlzam9pbnRJdGVtIiwiZ2V0Um9vdCIsInVuaW9uIiwidmFsdWVBIiwidmFsdWVCIiwicm9vdEtleUEiLCJyb290S2V5QiIsIkVycm9yIiwicm9vdEEiLCJyb290QiIsImdldFJhbmsiLCJhZGRDaGlsZCIsImluU2FtZVNldCJdLCJtYXBwaW5ncyI6Iit2SkFBQSxNQUFPQSxDQUFBQSxlQUFQLEtBQTRCLG1CQUE1QixDQUVBLGNBQWUsTUFBTUMsQ0FBQUEsV0FBWSxDQUMvQjs7S0FHQUMsV0FBVyxDQUFDQyxXQUFELENBQWMsMkNBQ3ZCLEtBQUtBLFdBQUwsQ0FBbUJBLFdBQW5CLENBRHVCLHFCQUV2QixLQUFLQyxLQUFMLENBQWEsRUFBYixDQUNELENBRUQ7OztLQUlBQyxPQUFPLENBQUNDLFNBQUQsQ0FBWSxzQkFDakIsS0FBTUMsQ0FBQUEsZUFBZSx1QkFBRyxHQUFJUCxDQUFBQSxlQUFKLENBQW9CTSxTQUFwQixDQUErQixLQUFLSCxXQUFwQyxDQUFILENBQXJCLENBRGlCLHFCQUdqQixHQUFJLENBQUMsS0FBS0MsS0FBTCxDQUFXRyxlQUFlLENBQUNDLE1BQWhCLEVBQVgsQ0FBTCxDQUEyQyw4Q0FDekM7QUFDQSxLQUFLSixLQUFMLENBQVdHLGVBQWUsQ0FBQ0MsTUFBaEIsRUFBWCxFQUF1Q0QsZUFBdkMsQ0FDRCxDQUhELDhCQUhpQixxQkFRakIsTUFBTyxLQUFQLENBQ0QsQ0FFRDs7Ozs7S0FNQUUsSUFBSSxDQUFDSCxTQUFELENBQVksc0JBQ2QsS0FBTUksQ0FBQUEsb0JBQW9CLHVCQUFHLEdBQUlWLENBQUFBLGVBQUosQ0FBb0JNLFNBQXBCLENBQStCLEtBQUtILFdBQXBDLENBQUgsQ0FBMUIsQ0FFQTtBQUNBLEtBQU1RLENBQUFBLG9CQUFvQix1QkFBRyxLQUFLUCxLQUFMLENBQVdNLG9CQUFvQixDQUFDRixNQUFyQixFQUFYLENBQUgsQ0FBMUIsQ0FKYyxxQkFNZCxHQUFJLENBQUNHLG9CQUFMLENBQTJCLDhDQUN6QixNQUFPLEtBQVAsQ0FDRCxDQUZELDhCQU5jLHNCQVVkLE1BQU9BLENBQUFBLG9CQUFvQixDQUFDQyxPQUFyQixHQUErQkosTUFBL0IsRUFBUCxDQUNELENBRUQ7Ozs7OztLQU9BSyxLQUFLLENBQUNDLE1BQUQsQ0FBU0MsTUFBVCxDQUFpQixzQkFDcEIsS0FBTUMsQ0FBQUEsUUFBUSx3QkFBRyxLQUFLUCxJQUFMLENBQVVLLE1BQVYsQ0FBSCxDQUFkLENBQ0EsS0FBTUcsQ0FBQUEsUUFBUSx3QkFBRyxLQUFLUixJQUFMLENBQVVNLE1BQVYsQ0FBSCxDQUFkLENBRm9CLHNCQUlwQixHQUFJLHlCQUFBQyxRQUFRLEdBQUssSUFBYiw0QkFBcUJDLFFBQVEsR0FBSyxJQUFsQyxDQUFKLENBQTRDLCtDQUMxQyxLQUFNLElBQUlDLENBQUFBLEtBQUosQ0FBVSxtQ0FBVixDQUFOLENBQ0QsQ0FGRCw4QkFKb0Isc0JBUXBCLEdBQUlGLFFBQVEsR0FBS0MsUUFBakIsQ0FBMkIsK0NBQ3pCO0FBQ0EsTUFBTyxLQUFQLENBQ0QsQ0FIRCw4QkFLQSxLQUFNRSxDQUFBQSxLQUFLLHdCQUFHLEtBQUtmLEtBQUwsQ0FBV1ksUUFBWCxDQUFILENBQVgsQ0FDQSxLQUFNSSxDQUFBQSxLQUFLLHdCQUFHLEtBQUtoQixLQUFMLENBQVdhLFFBQVgsQ0FBSCxDQUFYLENBZG9CLHNCQWdCcEIsR0FBSUUsS0FBSyxDQUFDRSxPQUFOLEdBQWtCRCxLQUFLLENBQUNDLE9BQU4sRUFBdEIsQ0FBdUMsK0NBQ3JDO0FBQ0FELEtBQUssQ0FBQ0UsUUFBTixDQUFlSCxLQUFmLEVBRnFDLHNCQUlyQyxNQUFPLEtBQVAsQ0FDRCxDQUxELDhCQU9BO0FBdkJvQixzQkF3QnBCQSxLQUFLLENBQUNHLFFBQU4sQ0FBZUYsS0FBZixFQXhCb0Isc0JBMEJwQixNQUFPLEtBQVAsQ0FDRCxDQUVEOzs7O0tBS0FHLFNBQVMsQ0FBQ1QsTUFBRCxDQUFTQyxNQUFULENBQWlCLHNCQUN4QixLQUFNQyxDQUFBQSxRQUFRLHdCQUFHLEtBQUtQLElBQUwsQ0FBVUssTUFBVixDQUFILENBQWQsQ0FDQSxLQUFNRyxDQUFBQSxRQUFRLHdCQUFHLEtBQUtSLElBQUwsQ0FBVU0sTUFBVixDQUFILENBQWQsQ0FGd0Isc0JBSXhCLEdBQUkseUJBQUFDLFFBQVEsR0FBSyxJQUFiLDRCQUFxQkMsUUFBUSxHQUFLLElBQWxDLENBQUosQ0FBNEMsK0NBQzFDLEtBQU0sSUFBSUMsQ0FBQUEsS0FBSixDQUFVLG1DQUFWLENBQU4sQ0FDRCxDQUZELDhCQUp3QixzQkFReEIsTUFBT0YsQ0FBQUEsUUFBUSxHQUFLQyxRQUFwQixDQUNELENBN0Y4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaXNqb2ludFNldEl0ZW0gZnJvbSAnLi9EaXNqb2ludFNldEl0ZW0nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNqb2ludFNldCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKHZhbHVlOiAqKX0gW2tleUNhbGxiYWNrXVxuICAgKi9cbiAgY29uc3RydWN0b3Ioa2V5Q2FsbGJhY2spIHtcbiAgICB0aGlzLmtleUNhbGxiYWNrID0ga2V5Q2FsbGJhY2s7XG4gICAgdGhpcy5pdGVtcyA9IHt9O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Kn0gaXRlbVZhbHVlXG4gICAqIEByZXR1cm4ge0Rpc2pvaW50U2V0fVxuICAgKi9cbiAgbWFrZVNldChpdGVtVmFsdWUpIHtcbiAgICBjb25zdCBkaXNqb2ludFNldEl0ZW0gPSBuZXcgRGlzam9pbnRTZXRJdGVtKGl0ZW1WYWx1ZSwgdGhpcy5rZXlDYWxsYmFjayk7XG5cbiAgICBpZiAoIXRoaXMuaXRlbXNbZGlzam9pbnRTZXRJdGVtLmdldEtleSgpXSkge1xuICAgICAgLy8gQWRkIG5ldyBpdGVtIG9ubHkgaW4gY2FzZSBpZiBpdCBub3QgcHJlc2VudGVkIHlldC5cbiAgICAgIHRoaXMuaXRlbXNbZGlzam9pbnRTZXRJdGVtLmdldEtleSgpXSA9IGRpc2pvaW50U2V0SXRlbTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kIHNldCByZXByZXNlbnRhdGlvbiBub2RlLlxuICAgKlxuICAgKiBAcGFyYW0geyp9IGl0ZW1WYWx1ZVxuICAgKiBAcmV0dXJuIHsoc3RyaW5nfG51bGwpfVxuICAgKi9cbiAgZmluZChpdGVtVmFsdWUpIHtcbiAgICBjb25zdCB0ZW1wbGF0ZURpc2pvaW50SXRlbSA9IG5ldyBEaXNqb2ludFNldEl0ZW0oaXRlbVZhbHVlLCB0aGlzLmtleUNhbGxiYWNrKTtcblxuICAgIC8vIFRyeSB0byBmaW5kIGl0ZW0gaXRzZWxmO1xuICAgIGNvbnN0IHJlcXVpcmVkRGlzam9pbnRJdGVtID0gdGhpcy5pdGVtc1t0ZW1wbGF0ZURpc2pvaW50SXRlbS5nZXRLZXkoKV07XG5cbiAgICBpZiAoIXJlcXVpcmVkRGlzam9pbnRJdGVtKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVxdWlyZWREaXNqb2ludEl0ZW0uZ2V0Um9vdCgpLmdldEtleSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFVuaW9uIGJ5IHJhbmsuXG4gICAqXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWVBXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWVCXG4gICAqIEByZXR1cm4ge0Rpc2pvaW50U2V0fVxuICAgKi9cbiAgdW5pb24odmFsdWVBLCB2YWx1ZUIpIHtcbiAgICBjb25zdCByb290S2V5QSA9IHRoaXMuZmluZCh2YWx1ZUEpO1xuICAgIGNvbnN0IHJvb3RLZXlCID0gdGhpcy5maW5kKHZhbHVlQik7XG5cbiAgICBpZiAocm9vdEtleUEgPT09IG51bGwgfHwgcm9vdEtleUIgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignT25lIG9yIHR3byB2YWx1ZXMgYXJlIG5vdCBpbiBzZXRzJyk7XG4gICAgfVxuXG4gICAgaWYgKHJvb3RLZXlBID09PSByb290S2V5Qikge1xuICAgICAgLy8gSW4gY2FzZSBpZiBib3RoIGVsZW1lbnRzIGFyZSBhbHJlYWR5IGluIHRoZSBzYW1lIHNldCB0aGVuIGp1c3QgcmV0dXJuIGl0cyBrZXkuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBjb25zdCByb290QSA9IHRoaXMuaXRlbXNbcm9vdEtleUFdO1xuICAgIGNvbnN0IHJvb3RCID0gdGhpcy5pdGVtc1tyb290S2V5Ql07XG5cbiAgICBpZiAocm9vdEEuZ2V0UmFuaygpIDwgcm9vdEIuZ2V0UmFuaygpKSB7XG4gICAgICAvLyBJZiByb290QidzIHRyZWUgaXMgYmlnZ2VyIHRoZW4gbWFrZSByb290QiB0byBiZSBhIG5ldyByb290LlxuICAgICAgcm9vdEIuYWRkQ2hpbGQocm9vdEEpO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvLyBJZiByb290QSdzIHRyZWUgaXMgYmlnZ2VyIHRoZW4gbWFrZSByb290QSB0byBiZSBhIG5ldyByb290LlxuICAgIHJvb3RBLmFkZENoaWxkKHJvb3RCKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWVBXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWVCXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBpblNhbWVTZXQodmFsdWVBLCB2YWx1ZUIpIHtcbiAgICBjb25zdCByb290S2V5QSA9IHRoaXMuZmluZCh2YWx1ZUEpO1xuICAgIGNvbnN0IHJvb3RLZXlCID0gdGhpcy5maW5kKHZhbHVlQik7XG5cbiAgICBpZiAocm9vdEtleUEgPT09IG51bGwgfHwgcm9vdEtleUIgPT09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignT25lIG9yIHR3byB2YWx1ZXMgYXJlIG5vdCBpbiBzZXRzJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJvb3RLZXlBID09PSByb290S2V5QjtcbiAgfVxufVxuIl19