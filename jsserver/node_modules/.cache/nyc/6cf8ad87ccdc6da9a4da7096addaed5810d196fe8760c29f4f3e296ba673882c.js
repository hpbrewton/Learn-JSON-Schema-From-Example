var cov_ke0obkqxt=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/graph/GraphVertex.js";var hash="68a5dd0f86c6df16542ad79e1d52e693e99682fc";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/graph/GraphVertex.js",statementMap:{"0":{start:{line:8,column:4},end:{line:10,column:5}},"1":{start:{line:9,column:6},end:{line:9,column:56}},"2":{start:{line:16,column:27},end:{line:22,column:5}},"3":{start:{line:17,column:6},end:{line:19,column:7}},"4":{start:{line:18,column:8},end:{line:18,column:17}},"5":{start:{line:21,column:6},end:{line:21,column:54}},"6":{start:{line:26,column:4},end:{line:26,column:23}},"7":{start:{line:27,column:4},end:{line:27,column:48}},"8":{start:{line:35,column:4},end:{line:35,column:28}},"9":{start:{line:37,column:4},end:{line:37,column:16}},"10":{start:{line:44,column:4},end:{line:44,column:28}},"11":{start:{line:51,column:18},end:{line:51,column:38}},"12":{start:{line:54,column:31},end:{line:56,column:5}},"13":{start:{line:55,column:6},end:{line:55,column:93}},"14":{start:{line:60,column:4},end:{line:60,column:41}},"15":{start:{line:67,column:4},end:{line:67,column:76}},"16":{start:{line:67,column:54},end:{line:67,column:74}},"17":{start:{line:74,column:4},end:{line:74,column:39}},"18":{start:{line:82,column:21},end:{line:84,column:6}},"19":{start:{line:83,column:24},end:{line:83,column:45}},"20":{start:{line:86,column:4},end:{line:86,column:22}},"21":{start:{line:94,column:23},end:{line:96,column:6}},"22":{start:{line:95,column:24},end:{line:95,column:80}},"23":{start:{line:98,column:4},end:{line:98,column:24}},"24":{start:{line:106,column:23},end:{line:108,column:5}},"25":{start:{line:107,column:6},end:{line:107,column:70}},"26":{start:{line:110,column:17},end:{line:110,column:58}},"27":{start:{line:112,column:4},end:{line:112,column:36}},"28":{start:{line:119,column:4},end:{line:119,column:22}},"29":{start:{line:126,column:4},end:{line:126,column:59}},"30":{start:{line:126,column:36},end:{line:126,column:57}},"31":{start:{line:128,column:4},end:{line:128,column:16}},"32":{start:{line:136,column:4},end:{line:136,column:61}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:2},end:{line:7,column:3}},loc:{start:{line:7,column:21},end:{line:28,column:3}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:27},end:{line:16,column:28}},loc:{start:{line:16,column:45},end:{line:22,column:5}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:2},end:{line:34,column:3}},loc:{start:{line:34,column:16},end:{line:38,column:3}},line:34},"3":{name:"(anonymous_3)",decl:{start:{line:43,column:2},end:{line:43,column:3}},loc:{start:{line:43,column:19},end:{line:45,column:3}},line:43},"4":{name:"(anonymous_4)",decl:{start:{line:50,column:2},end:{line:50,column:3}},loc:{start:{line:50,column:17},end:{line:61,column:3}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:54,column:31},end:{line:54,column:32}},loc:{start:{line:54,column:41},end:{line:56,column:5}},line:54},"6":{name:"(anonymous_6)",decl:{start:{line:66,column:2},end:{line:66,column:3}},loc:{start:{line:66,column:13},end:{line:68,column:3}},line:66},"7":{name:"(anonymous_7)",decl:{start:{line:67,column:36},end:{line:67,column:37}},loc:{start:{line:67,column:54},end:{line:67,column:74}},line:67},"8":{name:"(anonymous_8)",decl:{start:{line:73,column:2},end:{line:73,column:3}},loc:{start:{line:73,column:14},end:{line:75,column:3}},line:73},"9":{name:"(anonymous_9)",decl:{start:{line:81,column:2},end:{line:81,column:3}},loc:{start:{line:81,column:24},end:{line:87,column:3}},line:81},"10":{name:"(anonymous_10)",decl:{start:{line:83,column:16},end:{line:83,column:17}},loc:{start:{line:83,column:24},end:{line:83,column:45}},line:83},"11":{name:"(anonymous_11)",decl:{start:{line:93,column:2},end:{line:93,column:3}},loc:{start:{line:93,column:22},end:{line:99,column:3}},line:93},"12":{name:"(anonymous_12)",decl:{start:{line:95,column:16},end:{line:95,column:17}},loc:{start:{line:95,column:24},end:{line:95,column:80}},line:95},"13":{name:"(anonymous_13)",decl:{start:{line:105,column:2},end:{line:105,column:3}},loc:{start:{line:105,column:19},end:{line:113,column:3}},line:105},"14":{name:"(anonymous_14)",decl:{start:{line:106,column:23},end:{line:106,column:24}},loc:{start:{line:106,column:33},end:{line:108,column:5}},line:106},"15":{name:"(anonymous_15)",decl:{start:{line:118,column:2},end:{line:118,column:3}},loc:{start:{line:118,column:11},end:{line:120,column:3}},line:118},"16":{name:"(anonymous_16)",decl:{start:{line:125,column:2},end:{line:125,column:3}},loc:{start:{line:125,column:19},end:{line:129,column:3}},line:125},"17":{name:"(anonymous_17)",decl:{start:{line:126,column:28},end:{line:126,column:29}},loc:{start:{line:126,column:36},end:{line:126,column:57}},line:126},"18":{name:"(anonymous_18)",decl:{start:{line:135,column:2},end:{line:135,column:3}},loc:{start:{line:135,column:21},end:{line:137,column:3}},line:135}},branchMap:{"0":{loc:{start:{line:8,column:4},end:{line:10,column:5}},type:"if",locations:[{start:{line:8,column:4},end:{line:10,column:5}},{start:{line:8,column:4},end:{line:10,column:5}}],line:8},"1":{loc:{start:{line:17,column:6},end:{line:19,column:7}},type:"if",locations:[{start:{line:17,column:6},end:{line:19,column:7}},{start:{line:17,column:6},end:{line:19,column:7}}],line:17},"2":{loc:{start:{line:21,column:13},end:{line:21,column:53}},type:"cond-expr",locations:[{start:{line:21,column:47},end:{line:21,column:49}},{start:{line:21,column:52},end:{line:21,column:53}}],line:21},"3":{loc:{start:{line:55,column:13},end:{line:55,column:92}},type:"cond-expr",locations:[{start:{line:55,column:47},end:{line:55,column:67}},{start:{line:55,column:70},end:{line:55,column:92}}],line:55},"4":{loc:{start:{line:95,column:24},end:{line:95,column:80}},type:"binary-expr",locations:[{start:{line:95,column:24},end:{line:95,column:51}},{start:{line:95,column:55},end:{line:95,column:80}}],line:95},"5":{loc:{start:{line:107,column:13},end:{line:107,column:69}},type:"binary-expr",locations:[{start:{line:107,column:13},end:{line:107,column:40}},{start:{line:107,column:44},end:{line:107,column:69}}],line:107},"6":{loc:{start:{line:112,column:11},end:{line:112,column:35}},type:"cond-expr",locations:[{start:{line:112,column:18},end:{line:112,column:28}},{start:{line:112,column:31},end:{line:112,column:35}}],line:112},"7":{loc:{start:{line:136,column:11},end:{line:136,column:60}},type:"cond-expr",locations:[{start:{line:136,column:22},end:{line:136,column:42}},{start:{line:136,column:45},end:{line:136,column:60}}],line:136}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"68a5dd0f86c6df16542ad79e1d52e693e99682fc"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();import LinkedList from'../linked-list/LinkedList';export default class GraphVertex{/**
   * @param {*} value
   */constructor(value){cov_ke0obkqxt.f[0]++;cov_ke0obkqxt.s[0]++;if(value===undefined){cov_ke0obkqxt.b[0][0]++;cov_ke0obkqxt.s[1]++;throw new Error('Graph vertex must have a value');}else{cov_ke0obkqxt.b[0][1]++;}/**
     * @param {GraphEdge} edgeA
     * @param {GraphEdge} edgeB
     */cov_ke0obkqxt.s[2]++;const edgeComparator=(edgeA,edgeB)=>{cov_ke0obkqxt.f[1]++;cov_ke0obkqxt.s[3]++;if(edgeA.getKey()===edgeB.getKey()){cov_ke0obkqxt.b[1][0]++;cov_ke0obkqxt.s[4]++;return 0;}else{cov_ke0obkqxt.b[1][1]++;}cov_ke0obkqxt.s[5]++;return edgeA.getKey()<edgeB.getKey()?(cov_ke0obkqxt.b[2][0]++,-1):(cov_ke0obkqxt.b[2][1]++,1);};// Normally you would store string value like vertex name.
// But generally it may be any object as well
cov_ke0obkqxt.s[6]++;this.value=value;cov_ke0obkqxt.s[7]++;this.edges=new LinkedList(edgeComparator);}/**
   * @param {GraphEdge} edge
   * @returns {GraphVertex}
   */addEdge(edge){cov_ke0obkqxt.f[2]++;cov_ke0obkqxt.s[8]++;this.edges.append(edge);cov_ke0obkqxt.s[9]++;return this;}/**
   * @param {GraphEdge} edge
   */deleteEdge(edge){cov_ke0obkqxt.f[3]++;cov_ke0obkqxt.s[10]++;this.edges.delete(edge);}/**
   * @returns {GraphVertex[]}
   */getNeighbors(){cov_ke0obkqxt.f[4]++;const edges=(cov_ke0obkqxt.s[11]++,this.edges.toArray());/** @param {LinkedListNode} node */cov_ke0obkqxt.s[12]++;const neighborsConverter=node=>{cov_ke0obkqxt.f[5]++;cov_ke0obkqxt.s[13]++;return node.value.startVertex===this?(cov_ke0obkqxt.b[3][0]++,node.value.endVertex):(cov_ke0obkqxt.b[3][1]++,node.value.startVertex);};// Return either start or end vertex.
// For undirected graphs it is possible that current vertex will be the end one.
cov_ke0obkqxt.s[14]++;return edges.map(neighborsConverter);}/**
   * @return {GraphEdge[]}
   */getEdges(){cov_ke0obkqxt.f[6]++;cov_ke0obkqxt.s[15]++;return this.edges.toArray().map(linkedListNode=>{cov_ke0obkqxt.f[7]++;cov_ke0obkqxt.s[16]++;return linkedListNode.value;});}/**
   * @return {number}
   */getDegree(){cov_ke0obkqxt.f[8]++;cov_ke0obkqxt.s[17]++;return this.edges.toArray().length;}/**
   * @param {GraphEdge} requiredEdge
   * @returns {boolean}
   */hasEdge(requiredEdge){cov_ke0obkqxt.f[9]++;const edgeNode=(cov_ke0obkqxt.s[18]++,this.edges.find({callback:edge=>{cov_ke0obkqxt.f[10]++;cov_ke0obkqxt.s[19]++;return edge===requiredEdge;}}));cov_ke0obkqxt.s[20]++;return!!edgeNode;}/**
   * @param {GraphVertex} vertex
   * @returns {boolean}
   */hasNeighbor(vertex){cov_ke0obkqxt.f[11]++;const vertexNode=(cov_ke0obkqxt.s[21]++,this.edges.find({callback:edge=>{cov_ke0obkqxt.f[12]++;cov_ke0obkqxt.s[22]++;return(cov_ke0obkqxt.b[4][0]++,edge.startVertex===vertex)||(cov_ke0obkqxt.b[4][1]++,edge.endVertex===vertex);}}));cov_ke0obkqxt.s[23]++;return!!vertexNode;}/**
   * @param {GraphVertex} vertex
   * @returns {(GraphEdge|null)}
   */findEdge(vertex){cov_ke0obkqxt.f[13]++;cov_ke0obkqxt.s[24]++;const edgeFinder=edge=>{cov_ke0obkqxt.f[14]++;cov_ke0obkqxt.s[25]++;return(cov_ke0obkqxt.b[5][0]++,edge.startVertex===vertex)||(cov_ke0obkqxt.b[5][1]++,edge.endVertex===vertex);};const edge=(cov_ke0obkqxt.s[26]++,this.edges.find({callback:edgeFinder}));cov_ke0obkqxt.s[27]++;return edge?(cov_ke0obkqxt.b[6][0]++,edge.value):(cov_ke0obkqxt.b[6][1]++,null);}/**
   * @returns {string}
   */getKey(){cov_ke0obkqxt.f[15]++;cov_ke0obkqxt.s[28]++;return this.value;}/**
   * @return {GraphVertex}
   */deleteAllEdges(){cov_ke0obkqxt.f[16]++;cov_ke0obkqxt.s[29]++;this.getEdges().forEach(edge=>{cov_ke0obkqxt.f[17]++;cov_ke0obkqxt.s[30]++;return this.deleteEdge(edge);});cov_ke0obkqxt.s[31]++;return this;}/**
   * @param {function} [callback]
   * @returns {string}
   */toString(callback){cov_ke0obkqxt.f[18]++;cov_ke0obkqxt.s[32]++;return callback?(cov_ke0obkqxt.b[7][0]++,callback(this.value)):(cov_ke0obkqxt.b[7][1]++,`${this.value}`);}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,