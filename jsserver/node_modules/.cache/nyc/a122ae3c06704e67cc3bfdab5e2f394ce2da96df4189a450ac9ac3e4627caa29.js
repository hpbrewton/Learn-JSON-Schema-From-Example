"use strict";var cov_had097sa6=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/build/data-structures/doubly-linked-list/DoublyLinkedList.js";var hash="7b7030b62caab2242f4bf9a1f2116cc858ebc319";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/build/data-structures/doubly-linked-list/DoublyLinkedList.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:28}},"2":{start:{line:8,column:28},end:{line:8,column:85}},"3":{start:{line:10,column:18},end:{line:10,column:86}},"4":{start:{line:12,column:39},end:{line:12,column:95}},"5":{start:{line:14,column:50},end:{line:14,column:151}},"6":{start:{line:14,column:92},end:{line:14,column:149}},"7":{start:{line:16,column:44},end:{line:16,column:315}},"8":{start:{line:16,column:57},end:{line:16,column:58}},"9":{start:{line:16,column:102},end:{line:16,column:110}},"10":{start:{line:16,column:112},end:{line:16,column:167}},"11":{start:{line:16,column:168},end:{line:16,column:199}},"12":{start:{line:16,column:200},end:{line:16,column:254}},"13":{start:{line:16,column:227},end:{line:16,column:254}},"14":{start:{line:16,column:255},end:{line:16,column:313}},"15":{start:{line:18,column:62},end:{line:18,column:131}},"16":{start:{line:18,column:78},end:{line:18,column:131}},"17":{start:{line:18,column:132},end:{line:18,column:193}},"18":{start:{line:18,column:149},end:{line:18,column:193}},"19":{start:{line:18,column:194},end:{line:18,column:213}},"20":{start:{line:22,column:0},end:{line:300,column:3}},"21":{start:{line:27,column:4},end:{line:27,column:44}},"22":{start:{line:30,column:4},end:{line:30,column:21}},"23":{start:{line:33,column:4},end:{line:33,column:21}},"24":{start:{line:34,column:4},end:{line:34,column:66}},"25":{start:{line:42,column:2},end:{line:297,column:6}},"26":{start:{line:46,column:20},end:{line:46,column:74}},"27":{start:{line:50,column:6},end:{line:52,column:7}},"28":{start:{line:51,column:8},end:{line:51,column:37}},"29":{start:{line:54,column:6},end:{line:54,column:26}},"30":{start:{line:56,column:6},end:{line:58,column:7}},"31":{start:{line:57,column:8},end:{line:57,column:28}},"32":{start:{line:60,column:6},end:{line:60,column:18}},"33":{start:{line:70,column:20},end:{line:70,column:63}},"34":{start:{line:72,column:6},end:{line:76,column:7}},"35":{start:{line:73,column:8},end:{line:73,column:28}},"36":{start:{line:74,column:8},end:{line:74,column:28}},"37":{start:{line:75,column:8},end:{line:75,column:20}},"38":{start:{line:79,column:6},end:{line:79,column:31}},"39":{start:{line:81,column:6},end:{line:81,column:35}},"40":{start:{line:83,column:6},end:{line:83,column:26}},"41":{start:{line:84,column:6},end:{line:84,column:18}},"42":{start:{line:94,column:6},end:{line:96,column:7}},"43":{start:{line:95,column:8},end:{line:95,column:20}},"44":{start:{line:98,column:24},end:{line:98,column:28}},"45":{start:{line:99,column:24},end:{line:99,column:33}},"46":{start:{line:101,column:6},end:{line:134,column:7}},"47":{start:{line:102,column:8},end:{line:131,column:9}},"48":{start:{line:103,column:10},end:{line:103,column:36}},"49":{start:{line:105,column:10},end:{line:130,column:11}},"50":{start:{line:108,column:12},end:{line:108,column:41}},"51":{start:{line:110,column:12},end:{line:112,column:13}},"52":{start:{line:111,column:14},end:{line:111,column:40}},"53":{start:{line:116,column:12},end:{line:118,column:13}},"54":{start:{line:117,column:14},end:{line:117,column:31}},"55":{start:{line:119,column:17},end:{line:130,column:11}},"56":{start:{line:122,column:12},end:{line:122,column:45}},"57":{start:{line:123,column:12},end:{line:123,column:34}},"58":{start:{line:126,column:31},end:{line:126,column:51}},"59":{start:{line:127,column:27},end:{line:127,column:43}},"60":{start:{line:128,column:12},end:{line:128,column:41}},"61":{start:{line:129,column:12},end:{line:129,column:45}},"62":{start:{line:133,column:8},end:{line:133,column:39}},"63":{start:{line:136,column:6},end:{line:136,column:25}},"64":{start:{line:148,column:23},end:{line:148,column:33}},"65":{start:{line:149,column:18},end:{line:149,column:64}},"66":{start:{line:150,column:26},end:{line:150,column:39}},"67":{start:{line:151,column:21},end:{line:151,column:73}},"68":{start:{line:153,column:6},end:{line:155,column:7}},"69":{start:{line:154,column:8},end:{line:154,column:20}},"70":{start:{line:157,column:24},end:{line:157,column:33}},"71":{start:{line:159,column:6},end:{line:171,column:7}},"72":{start:{line:161,column:8},end:{line:163,column:9}},"73":{start:{line:162,column:10},end:{line:162,column:29}},"74":{start:{line:166,column:8},end:{line:168,column:9}},"75":{start:{line:167,column:10},end:{line:167,column:29}},"76":{start:{line:170,column:8},end:{line:170,column:39}},"77":{start:{line:173,column:6},end:{line:173,column:18}},"78":{start:{line:182,column:6},end:{line:185,column:7}},"79":{start:{line:184,column:8},end:{line:184,column:20}},"80":{start:{line:187,column:6},end:{line:193,column:7}},"81":{start:{line:189,column:27},end:{line:189,column:36}},"82":{start:{line:190,column:8},end:{line:190,column:25}},"83":{start:{line:191,column:8},end:{line:191,column:25}},"84":{start:{line:192,column:8},end:{line:192,column:28}},"85":{start:{line:196,column:24},end:{line:196,column:33}},"86":{start:{line:197,column:6},end:{line:197,column:37}},"87":{start:{line:198,column:6},end:{line:198,column:28}},"88":{start:{line:199,column:6},end:{line:199,column:25}},"89":{start:{line:208,column:6},end:{line:210,column:7}},"90":{start:{line:209,column:8},end:{line:209,column:20}},"91":{start:{line:212,column:24},end:{line:212,column:33}},"92":{start:{line:214,column:6},end:{line:220,column:7}},"93":{start:{line:215,column:8},end:{line:215,column:35}},"94":{start:{line:216,column:8},end:{line:216,column:34}},"95":{start:{line:218,column:8},end:{line:218,column:25}},"96":{start:{line:219,column:8},end:{line:219,column:25}},"97":{start:{line:222,column:6},end:{line:222,column:25}},"98":{start:{line:231,column:18},end:{line:231,column:20}},"99":{start:{line:232,column:24},end:{line:232,column:33}},"100":{start:{line:234,column:6},end:{line:237,column:7}},"101":{start:{line:235,column:8},end:{line:235,column:32}},"102":{start:{line:236,column:8},end:{line:236,column:39}},"103":{start:{line:239,column:6},end:{line:239,column:19}},"104":{start:{line:249,column:18},end:{line:249,column:22}},"105":{start:{line:251,column:6},end:{line:253,column:9}},"106":{start:{line:252,column:8},end:{line:252,column:35}},"107":{start:{line:254,column:6},end:{line:254,column:18}},"108":{start:{line:264,column:6},end:{line:266,column:20}},"109":{start:{line:265,column:8},end:{line:265,column:39}},"110":{start:{line:276,column:21},end:{line:276,column:30}},"111":{start:{line:277,column:21},end:{line:277,column:25}},"112":{start:{line:278,column:21},end:{line:278,column:25}},"113":{start:{line:280,column:6},end:{line:290,column:7}},"114":{start:{line:282,column:8},end:{line:282,column:33}},"115":{start:{line:283,column:8},end:{line:283,column:37}},"116":{start:{line:285,column:8},end:{line:285,column:33}},"117":{start:{line:286,column:8},end:{line:286,column:37}},"118":{start:{line:288,column:8},end:{line:288,column:28}},"119":{start:{line:289,column:8},end:{line:289,column:28}},"120":{start:{line:293,column:6},end:{line:293,column:28}},"121":{start:{line:294,column:6},end:{line:294,column:27}},"122":{start:{line:295,column:6},end:{line:295,column:18}},"123":{start:{line:299,column:2},end:{line:299,column:26}},"124":{start:{line:302,column:0},end:{line:302,column:38}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:12,column:9},end:{line:12,column:31}},loc:{start:{line:12,column:37},end:{line:12,column:97}},line:12},"1":{name:"_classCallCheck",decl:{start:{line:14,column:9},end:{line:14,column:24}},loc:{start:{line:14,column:48},end:{line:14,column:153}},line:14},"2":{name:"_defineProperties",decl:{start:{line:16,column:9},end:{line:16,column:26}},loc:{start:{line:16,column:42},end:{line:16,column:317}},line:16},"3":{name:"_createClass",decl:{start:{line:18,column:9},end:{line:18,column:21}},loc:{start:{line:18,column:60},end:{line:18,column:215}},line:18},"4":{name:"(anonymous_4)",decl:{start:{line:22,column:0},end:{line:22,column:1}},loc:{start:{line:22,column:12},end:{line:300,column:1}},line:22},"5":{name:"DoublyLinkedList",decl:{start:{line:26,column:11},end:{line:26,column:27}},loc:{start:{line:26,column:48},end:{line:35,column:3}},line:26},"6":{name:"prepend",decl:{start:{line:44,column:20},end:{line:44,column:27}},loc:{start:{line:44,column:35},end:{line:61,column:5}},line:44},"7":{name:"append",decl:{start:{line:69,column:20},end:{line:69,column:26}},loc:{start:{line:69,column:34},end:{line:85,column:5}},line:69},"8":{name:"_delete",decl:{start:{line:93,column:20},end:{line:93,column:27}},loc:{start:{line:93,column:35},end:{line:137,column:5}},line:93},"9":{name:"find",decl:{start:{line:147,column:20},end:{line:147,column:24}},loc:{start:{line:147,column:31},end:{line:174,column:5}},line:147},"10":{name:"deleteTail",decl:{start:{line:181,column:20},end:{line:181,column:30}},loc:{start:{line:181,column:33},end:{line:200,column:5}},line:181},"11":{name:"deleteHead",decl:{start:{line:207,column:20},end:{line:207,column:30}},loc:{start:{line:207,column:33},end:{line:223,column:5}},line:207},"12":{name:"toArray",decl:{start:{line:230,column:20},end:{line:230,column:27}},loc:{start:{line:230,column:30},end:{line:240,column:5}},line:230},"13":{name:"fromArray",decl:{start:{line:248,column:20},end:{line:248,column:29}},loc:{start:{line:248,column:38},end:{line:255,column:5}},line:248},"14":{name:"(anonymous_14)",decl:{start:{line:251,column:21},end:{line:251,column:22}},loc:{start:{line:251,column:38},end:{line:253,column:7}},line:251},"15":{name:"toString",decl:{start:{line:263,column:20},end:{line:263,column:28}},loc:{start:{line:263,column:39},end:{line:267,column:5}},line:263},"16":{name:"(anonymous_16)",decl:{start:{line:264,column:32},end:{line:264,column:33}},loc:{start:{line:264,column:48},end:{line:266,column:7}},line:264},"17":{name:"reverse",decl:{start:{line:275,column:20},end:{line:275,column:27}},loc:{start:{line:275,column:30},end:{line:296,column:5}},line:275}},branchMap:{"0":{loc:{start:{line:12,column:46},end:{line:12,column:94}},type:"cond-expr",locations:[{start:{line:12,column:70},end:{line:12,column:73}},{start:{line:12,column:76},end:{line:12,column:94}}],line:12},"1":{loc:{start:{line:12,column:46},end:{line:12,column:67}},type:"binary-expr",locations:[{start:{line:12,column:46},end:{line:12,column:49}},{start:{line:12,column:53},end:{line:12,column:67}}],line:12},"2":{loc:{start:{line:14,column:50},end:{line:14,column:151}},type:"if",locations:[{start:{line:14,column:50},end:{line:14,column:151}},{start:{line:14,column:50},end:{line:14,column:151}}],line:14},"3":{loc:{start:{line:16,column:136},end:{line:16,column:166}},type:"binary-expr",locations:[{start:{line:16,column:136},end:{line:16,column:157}},{start:{line:16,column:161},end:{line:16,column:166}}],line:16},"4":{loc:{start:{line:16,column:200},end:{line:16,column:254}},type:"if",locations:[{start:{line:16,column:200},end:{line:16,column:254}},{start:{line:16,column:200},end:{line:16,column:254}}],line:16},"5":{loc:{start:{line:18,column:62},end:{line:18,column:131}},type:"if",locations:[{start:{line:18,column:62},end:{line:18,column:131}},{start:{line:18,column:62},end:{line:18,column:131}}],line:18},"6":{loc:{start:{line:18,column:132},end:{line:18,column:193}},type:"if",locations:[{start:{line:18,column:132},end:{line:18,column:193}},{start:{line:18,column:132},end:{line:18,column:193}}],line:18},"7":{loc:{start:{line:50,column:6},end:{line:52,column:7}},type:"if",locations:[{start:{line:50,column:6},end:{line:52,column:7}},{start:{line:50,column:6},end:{line:52,column:7}}],line:50},"8":{loc:{start:{line:56,column:6},end:{line:58,column:7}},type:"if",locations:[{start:{line:56,column:6},end:{line:58,column:7}},{start:{line:56,column:6},end:{line:58,column:7}}],line:56},"9":{loc:{start:{line:72,column:6},end:{line:76,column:7}},type:"if",locations:[{start:{line:72,column:6},end:{line:76,column:7}},{start:{line:72,column:6},end:{line:76,column:7}}],line:72},"10":{loc:{start:{line:94,column:6},end:{line:96,column:7}},type:"if",locations:[{start:{line:94,column:6},end:{line:96,column:7}},{start:{line:94,column:6},end:{line:96,column:7}}],line:94},"11":{loc:{start:{line:102,column:8},end:{line:131,column:9}},type:"if",locations:[{start:{line:102,column:8},end:{line:131,column:9}},{start:{line:102,column:8},end:{line:131,column:9}}],line:102},"12":{loc:{start:{line:105,column:10},end:{line:130,column:11}},type:"if",locations:[{start:{line:105,column:10},end:{line:130,column:11}},{start:{line:105,column:10},end:{line:130,column:11}}],line:105},"13":{loc:{start:{line:110,column:12},end:{line:112,column:13}},type:"if",locations:[{start:{line:110,column:12},end:{line:112,column:13}},{start:{line:110,column:12},end:{line:112,column:13}}],line:110},"14":{loc:{start:{line:116,column:12},end:{line:118,column:13}},type:"if",locations:[{start:{line:116,column:12},end:{line:118,column:13}},{start:{line:116,column:12},end:{line:118,column:13}}],line:116},"15":{loc:{start:{line:119,column:17},end:{line:130,column:11}},type:"if",locations:[{start:{line:119,column:17},end:{line:130,column:11}},{start:{line:119,column:17},end:{line:130,column:11}}],line:119},"16":{loc:{start:{line:149,column:18},end:{line:149,column:64}},type:"cond-expr",locations:[{start:{line:149,column:42},end:{line:149,column:51}},{start:{line:149,column:54},end:{line:149,column:64}}],line:149},"17":{loc:{start:{line:151,column:21},end:{line:151,column:73}},type:"cond-expr",locations:[{start:{line:151,column:48},end:{line:151,column:57}},{start:{line:151,column:60},end:{line:151,column:73}}],line:151},"18":{loc:{start:{line:153,column:6},end:{line:155,column:7}},type:"if",locations:[{start:{line:153,column:6},end:{line:155,column:7}},{start:{line:153,column:6},end:{line:155,column:7}}],line:153},"19":{loc:{start:{line:161,column:8},end:{line:163,column:9}},type:"if",locations:[{start:{line:161,column:8},end:{line:163,column:9}},{start:{line:161,column:8},end:{line:163,column:9}}],line:161},"20":{loc:{start:{line:161,column:12},end:{line:161,column:51}},type:"binary-expr",locations:[{start:{line:161,column:12},end:{line:161,column:20}},{start:{line:161,column:24},end:{line:161,column:51}}],line:161},"21":{loc:{start:{line:166,column:8},end:{line:168,column:9}},type:"if",locations:[{start:{line:166,column:8},end:{line:168,column:9}},{start:{line:166,column:8},end:{line:168,column:9}}],line:166},"22":{loc:{start:{line:166,column:12},end:{line:166,column:79}},type:"binary-expr",locations:[{start:{line:166,column:12},end:{line:166,column:31}},{start:{line:166,column:35},end:{line:166,column:79}}],line:166},"23":{loc:{start:{line:182,column:6},end:{line:185,column:7}},type:"if",locations:[{start:{line:182,column:6},end:{line:185,column:7}},{start:{line:182,column:6},end:{line:185,column:7}}],line:182},"24":{loc:{start:{line:187,column:6},end:{line:193,column:7}},type:"if",locations:[{start:{line:187,column:6},end:{line:193,column:7}},{start:{line:187,column:6},end:{line:193,column:7}}],line:187},"25":{loc:{start:{line:208,column:6},end:{line:210,column:7}},type:"if",locations:[{start:{line:208,column:6},end:{line:210,column:7}},{start:{line:208,column:6},end:{line:210,column:7}}],line:208},"26":{loc:{start:{line:214,column:6},end:{line:220,column:7}},type:"if",locations:[{start:{line:214,column:6},end:{line:220,column:7}},{start:{line:214,column:6},end:{line:220,column:7}}],line:214}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"7b7030b62caab2242f4bf9a1f2116cc858ebc319"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_had097sa6.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_had097sa6.s[1]++;exports["default"]=void 0;var _DoublyLinkedListNode=(cov_had097sa6.s[2]++,_interopRequireDefault(require("./DoublyLinkedListNode")));var _Comparator=(cov_had097sa6.s[3]++,_interopRequireDefault(require("../../utils/comparator/Comparator")));function _interopRequireDefault(obj){cov_had097sa6.f[0]++;cov_had097sa6.s[4]++;return(cov_had097sa6.b[1][0]++,obj)&&(cov_had097sa6.b[1][1]++,obj.__esModule)?(cov_had097sa6.b[0][0]++,obj):(cov_had097sa6.b[0][1]++,{"default":obj});}function _classCallCheck(instance,Constructor){cov_had097sa6.f[1]++;cov_had097sa6.s[5]++;if(!(instance instanceof Constructor)){cov_had097sa6.b[2][0]++;cov_had097sa6.s[6]++;throw new TypeError("Cannot call a class as a function");}else{cov_had097sa6.b[2][1]++;}}function _defineProperties(target,props){cov_had097sa6.f[2]++;cov_had097sa6.s[7]++;for(var i=(cov_had097sa6.s[8]++,0);i<props.length;i++){var descriptor=(cov_had097sa6.s[9]++,props[i]);cov_had097sa6.s[10]++;descriptor.enumerable=(cov_had097sa6.b[3][0]++,descriptor.enumerable)||(cov_had097sa6.b[3][1]++,false);cov_had097sa6.s[11]++;descriptor.configurable=true;cov_had097sa6.s[12]++;if("value"in descriptor){cov_had097sa6.b[4][0]++;cov_had097sa6.s[13]++;descriptor.writable=true;}else{cov_had097sa6.b[4][1]++;}cov_had097sa6.s[14]++;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){cov_had097sa6.f[3]++;cov_had097sa6.s[15]++;if(protoProps){cov_had097sa6.b[5][0]++;cov_had097sa6.s[16]++;_defineProperties(Constructor.prototype,protoProps);}else{cov_had097sa6.b[5][1]++;}cov_had097sa6.s[17]++;if(staticProps){cov_had097sa6.b[6][0]++;cov_had097sa6.s[18]++;_defineProperties(Constructor,staticProps);}else{cov_had097sa6.b[6][1]++;}cov_had097sa6.s[19]++;return Constructor;}var DoublyLinkedList=(/*#__PURE__*/cov_had097sa6.s[20]++,function(){cov_had097sa6.f[4]++;/**
   * @param {Function} [comparatorFunction]
   */function DoublyLinkedList(comparatorFunction){cov_had097sa6.f[5]++;cov_had097sa6.s[21]++;_classCallCheck(this,DoublyLinkedList);/** @var DoublyLinkedListNode */cov_had097sa6.s[22]++;this.head=null;/** @var DoublyLinkedListNode */cov_had097sa6.s[23]++;this.tail=null;cov_had097sa6.s[24]++;this.compare=new _Comparator["default"](comparatorFunction);}/**
   * @param {*} value
   * @return {DoublyLinkedList}
   */cov_had097sa6.s[25]++;_createClass(DoublyLinkedList,[{key:"prepend",value:function prepend(value){cov_had097sa6.f[6]++;// Make new node to be a head.
var newNode=(cov_had097sa6.s[26]++,new _DoublyLinkedListNode["default"](value,this.head));// If there is head, then it won't be head anymore.
// Therefore, make its previous reference to be new node (new head).
// Then mark the new node as head.
cov_had097sa6.s[27]++;if(this.head){cov_had097sa6.b[7][0]++;cov_had097sa6.s[28]++;this.head.previous=newNode;}else{cov_had097sa6.b[7][1]++;}cov_had097sa6.s[29]++;this.head=newNode;// If there is no tail yet let's make new node a tail.
cov_had097sa6.s[30]++;if(!this.tail){cov_had097sa6.b[8][0]++;cov_had097sa6.s[31]++;this.tail=newNode;}else{cov_had097sa6.b[8][1]++;}cov_had097sa6.s[32]++;return this;}/**
     * @param {*} value
     * @return {DoublyLinkedList}
     */},{key:"append",value:function append(value){cov_had097sa6.f[7]++;var newNode=(cov_had097sa6.s[33]++,new _DoublyLinkedListNode["default"](value));// If there is no head yet let's make new node a head.
cov_had097sa6.s[34]++;if(!this.head){cov_had097sa6.b[9][0]++;cov_had097sa6.s[35]++;this.head=newNode;cov_had097sa6.s[36]++;this.tail=newNode;cov_had097sa6.s[37]++;return this;}else{cov_had097sa6.b[9][1]++;}// Attach new node to the end of linked list.
cov_had097sa6.s[38]++;this.tail.next=newNode;// Attach current tail to the new node's previous reference.
cov_had097sa6.s[39]++;newNode.previous=this.tail;// Set new node to be the tail of linked list.
cov_had097sa6.s[40]++;this.tail=newNode;cov_had097sa6.s[41]++;return this;}/**
     * @param {*} value
     * @return {DoublyLinkedListNode}
     */},{key:"delete",value:function _delete(value){cov_had097sa6.f[8]++;cov_had097sa6.s[42]++;if(!this.head){cov_had097sa6.b[10][0]++;cov_had097sa6.s[43]++;return null;}else{cov_had097sa6.b[10][1]++;}var deletedNode=(cov_had097sa6.s[44]++,null);var currentNode=(cov_had097sa6.s[45]++,this.head);cov_had097sa6.s[46]++;while(currentNode){cov_had097sa6.s[47]++;if(this.compare.equal(currentNode.value,value)){cov_had097sa6.b[11][0]++;cov_had097sa6.s[48]++;deletedNode=currentNode;cov_had097sa6.s[49]++;if(deletedNode===this.head){cov_had097sa6.b[12][0]++;cov_had097sa6.s[50]++;// If HEAD is going to be deleted...
// Set head to second node, which will become new head.
this.head=deletedNode.next;// Set new head's previous to null.
cov_had097sa6.s[51]++;if(this.head){cov_had097sa6.b[13][0]++;cov_had097sa6.s[52]++;this.head.previous=null;}else{cov_had097sa6.b[13][1]++;}// If all the nodes in list has same value that is passed as argument
// then all nodes will get deleted, therefore tail needs to be updated.
cov_had097sa6.s[53]++;if(deletedNode===this.tail){cov_had097sa6.b[14][0]++;cov_had097sa6.s[54]++;this.tail=null;}else{cov_had097sa6.b[14][1]++;}}else{cov_had097sa6.b[12][1]++;cov_had097sa6.s[55]++;if(deletedNode===this.tail){cov_had097sa6.b[15][0]++;cov_had097sa6.s[56]++;// If TAIL is going to be deleted...
// Set tail to second last node, which will become new tail.
this.tail=deletedNode.previous;cov_had097sa6.s[57]++;this.tail.next=null;}else{cov_had097sa6.b[15][1]++;// If MIDDLE node is going to be deleted...
var previousNode=(cov_had097sa6.s[58]++,deletedNode.previous);var nextNode=(cov_had097sa6.s[59]++,deletedNode.next);cov_had097sa6.s[60]++;previousNode.next=nextNode;cov_had097sa6.s[61]++;nextNode.previous=previousNode;}}}else{cov_had097sa6.b[11][1]++;}cov_had097sa6.s[62]++;currentNode=currentNode.next;}cov_had097sa6.s[63]++;return deletedNode;}/**
     * @param {Object} findParams
     * @param {*} findParams.value
     * @param {function} [findParams.callback]
     * @return {DoublyLinkedListNode}
     */},{key:"find",value:function find(_ref){cov_had097sa6.f[9]++;var _ref$value=(cov_had097sa6.s[64]++,_ref.value),value=(cov_had097sa6.s[65]++,_ref$value===void 0?(cov_had097sa6.b[16][0]++,undefined):(cov_had097sa6.b[16][1]++,_ref$value)),_ref$callback=(cov_had097sa6.s[66]++,_ref.callback),callback=(cov_had097sa6.s[67]++,_ref$callback===void 0?(cov_had097sa6.b[17][0]++,undefined):(cov_had097sa6.b[17][1]++,_ref$callback));cov_had097sa6.s[68]++;if(!this.head){cov_had097sa6.b[18][0]++;cov_had097sa6.s[69]++;return null;}else{cov_had097sa6.b[18][1]++;}var currentNode=(cov_had097sa6.s[70]++,this.head);cov_had097sa6.s[71]++;while(currentNode){cov_had097sa6.s[72]++;// If callback is specified then try to find node by callback.
if((cov_had097sa6.b[20][0]++,callback)&&(cov_had097sa6.b[20][1]++,callback(currentNode.value))){cov_had097sa6.b[19][0]++;cov_had097sa6.s[73]++;return currentNode;}else{cov_had097sa6.b[19][1]++;}// If value is specified then try to compare by value..
cov_had097sa6.s[74]++;if((cov_had097sa6.b[22][0]++,value!==undefined)&&(cov_had097sa6.b[22][1]++,this.compare.equal(currentNode.value,value))){cov_had097sa6.b[21][0]++;cov_had097sa6.s[75]++;return currentNode;}else{cov_had097sa6.b[21][1]++;}cov_had097sa6.s[76]++;currentNode=currentNode.next;}cov_had097sa6.s[77]++;return null;}/**
     * @return {DoublyLinkedListNode}
     */},{key:"deleteTail",value:function deleteTail(){cov_had097sa6.f[10]++;cov_had097sa6.s[78]++;if(!this.tail){cov_had097sa6.b[23][0]++;cov_had097sa6.s[79]++;// No tail to delete.
return null;}else{cov_had097sa6.b[23][1]++;}cov_had097sa6.s[80]++;if(this.head===this.tail){cov_had097sa6.b[24][0]++;// There is only one node in linked list.
var _deletedTail=(cov_had097sa6.s[81]++,this.tail);cov_had097sa6.s[82]++;this.head=null;cov_had097sa6.s[83]++;this.tail=null;cov_had097sa6.s[84]++;return _deletedTail;}else{cov_had097sa6.b[24][1]++;}// If there are many nodes in linked list...
var deletedTail=(cov_had097sa6.s[85]++,this.tail);cov_had097sa6.s[86]++;this.tail=this.tail.previous;cov_had097sa6.s[87]++;this.tail.next=null;cov_had097sa6.s[88]++;return deletedTail;}/**
     * @return {DoublyLinkedListNode}
     */},{key:"deleteHead",value:function deleteHead(){cov_had097sa6.f[11]++;cov_had097sa6.s[89]++;if(!this.head){cov_had097sa6.b[25][0]++;cov_had097sa6.s[90]++;return null;}else{cov_had097sa6.b[25][1]++;}var deletedHead=(cov_had097sa6.s[91]++,this.head);cov_had097sa6.s[92]++;if(this.head.next){cov_had097sa6.b[26][0]++;cov_had097sa6.s[93]++;this.head=this.head.next;cov_had097sa6.s[94]++;this.head.previous=null;}else{cov_had097sa6.b[26][1]++;cov_had097sa6.s[95]++;this.head=null;cov_had097sa6.s[96]++;this.tail=null;}cov_had097sa6.s[97]++;return deletedHead;}/**
     * @return {DoublyLinkedListNode[]}
     */},{key:"toArray",value:function toArray(){cov_had097sa6.f[12]++;var nodes=(cov_had097sa6.s[98]++,[]);var currentNode=(cov_had097sa6.s[99]++,this.head);cov_had097sa6.s[100]++;while(currentNode){cov_had097sa6.s[101]++;nodes.push(currentNode);cov_had097sa6.s[102]++;currentNode=currentNode.next;}cov_had097sa6.s[103]++;return nodes;}/**
     * @param {*[]} values - Array of values that need to be converted to linked list.
     * @return {DoublyLinkedList}
     */},{key:"fromArray",value:function fromArray(values){cov_had097sa6.f[13]++;var _this=(cov_had097sa6.s[104]++,this);cov_had097sa6.s[105]++;values.forEach(function(value){cov_had097sa6.f[14]++;cov_had097sa6.s[106]++;return _this.append(value);});cov_had097sa6.s[107]++;return this;}/**
     * @param {function} [callback]
     * @return {string}
     */},{key:"toString",value:function toString(callback){cov_had097sa6.f[15]++;cov_had097sa6.s[108]++;return this.toArray().map(function(node){cov_had097sa6.f[16]++;cov_had097sa6.s[109]++;return node.toString(callback);}).toString();}/**
     * Reverse a linked list.
     * @returns {DoublyLinkedList}
     */},{key:"reverse",value:function reverse(){cov_had097sa6.f[17]++;var currNode=(cov_had097sa6.s[110]++,this.head);var prevNode=(cov_had097sa6.s[111]++,null);var nextNode=(cov_had097sa6.s[112]++,null);cov_had097sa6.s[113]++;while(currNode){cov_had097sa6.s[114]++;// Store next node.
nextNode=currNode.next;cov_had097sa6.s[115]++;prevNode=currNode.previous;// Change next node of the current node so it would link to previous node.
cov_had097sa6.s[116]++;currNode.next=prevNode;cov_had097sa6.s[117]++;currNode.previous=nextNode;// Move prevNode and currNode nodes one step forward.
cov_had097sa6.s[118]++;prevNode=currNode;cov_had097sa6.s[119]++;currNode=nextNode;}// Reset head and tail.
cov_had097sa6.s[120]++;this.tail=this.head;cov_had097sa6.s[121]++;this.head=prevNode;cov_had097sa6.s[122]++;return this;}}]);cov_had097sa6.s[123]++;return DoublyLinkedList;}());cov_had097sa6.s[124]++;exports["default"]=DoublyLinkedList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,