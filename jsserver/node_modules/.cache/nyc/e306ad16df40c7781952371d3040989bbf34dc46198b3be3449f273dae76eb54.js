var cov_228d2ie0g7=function(){var path="/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/queue/Queue.js";var hash="d21f475865eefad78c3a3e778b31f7d8c7a29d1b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/hb/latlib/jsserver/javascript-algorithms/src/data-structures/queue/Queue.js",statementMap:{"0":{start:{line:9,column:4},end:{line:9,column:39}},"1":{start:{line:16,column:4},end:{line:16,column:33}},"2":{start:{line:24,column:4},end:{line:26,column:5}},"3":{start:{line:25,column:6},end:{line:25,column:18}},"4":{start:{line:28,column:4},end:{line:28,column:38}},"5":{start:{line:37,column:4},end:{line:37,column:34}},"6":{start:{line:46,column:24},end:{line:46,column:52}},"7":{start:{line:47,column:4},end:{line:47,column:50}},"8":{start:{line:56,column:4},end:{line:56,column:46}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:2},end:{line:4,column:3}},loc:{start:{line:4,column:16},end:{line:10,column:3}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:2},end:{line:15,column:3}},loc:{start:{line:15,column:12},end:{line:17,column:3}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:2},end:{line:23,column:3}},loc:{start:{line:23,column:9},end:{line:29,column:3}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:2},end:{line:36,column:3}},loc:{start:{line:36,column:17},end:{line:38,column:3}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:45,column:2},end:{line:45,column:3}},loc:{start:{line:45,column:12},end:{line:48,column:3}},line:45},"5":{name:"(anonymous_5)",decl:{start:{line:54,column:2},end:{line:54,column:3}},loc:{start:{line:54,column:21},end:{line:57,column:3}},line:54}},branchMap:{"0":{loc:{start:{line:24,column:4},end:{line:26,column:5}},type:"if",locations:[{start:{line:24,column:4},end:{line:26,column:5}},{start:{line:24,column:4},end:{line:26,column:5}}],line:24},"1":{loc:{start:{line:47,column:11},end:{line:47,column:49}},type:"cond-expr",locations:[{start:{line:47,column:25},end:{line:47,column:42}},{start:{line:47,column:45},end:{line:47,column:49}}],line:47}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"d21f475865eefad78c3a3e778b31f7d8c7a29d1b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();import LinkedList from'../linked-list/LinkedList';export default class Queue{constructor(){cov_228d2ie0g7.f[0]++;cov_228d2ie0g7.s[0]++;// We're going to implement Queue based on LinkedList since the two
// structures are quite similar. Namely, they both operate mostly on
// the elements at the beginning and the end. Compare enqueue/dequeue
// operations of Queue with append/deleteHead operations of LinkedList.
this.linkedList=new LinkedList();}/**
   * @return {boolean}
   */isEmpty(){cov_228d2ie0g7.f[1]++;cov_228d2ie0g7.s[1]++;return!this.linkedList.head;}/**
   * Read the element at the front of the queue without removing it.
   * @return {*}
   */peek(){cov_228d2ie0g7.f[2]++;cov_228d2ie0g7.s[2]++;if(!this.linkedList.head){cov_228d2ie0g7.b[0][0]++;cov_228d2ie0g7.s[3]++;return null;}else{cov_228d2ie0g7.b[0][1]++;}cov_228d2ie0g7.s[4]++;return this.linkedList.head.value;}/**
   * Add a new element to the end of the queue (the tail of the linked list).
   * This element will be processed after all elements ahead of it.
   * @param {*} value
   */enqueue(value){cov_228d2ie0g7.f[3]++;cov_228d2ie0g7.s[5]++;this.linkedList.append(value);}/**
   * Remove the element at the front of the queue (the head of the linked list).
   * If the queue is empty, return null.
   * @return {*}
   */dequeue(){cov_228d2ie0g7.f[4]++;const removedHead=(cov_228d2ie0g7.s[6]++,this.linkedList.deleteHead());cov_228d2ie0g7.s[7]++;return removedHead?(cov_228d2ie0g7.b[1][0]++,removedHead.value):(cov_228d2ie0g7.b[1][1]++,null);}/**
   * @param [callback]
   * @return {string}
   */toString(callback){cov_228d2ie0g7.f[5]++;cov_228d2ie0g7.s[8]++;// Return string representation of the queue's linked list.
return this.linkedList.toString(callback);}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYi9sYXRsaWIvanNzZXJ2ZXIvamF2YXNjcmlwdC1hbGdvcml0aG1zL3NyYy9kYXRhLXN0cnVjdHVyZXMvcXVldWUvUXVldWUuanMiXSwibmFtZXMiOlsiTGlua2VkTGlzdCIsIlF1ZXVlIiwiY29uc3RydWN0b3IiLCJsaW5rZWRMaXN0IiwiaXNFbXB0eSIsImhlYWQiLCJwZWVrIiwidmFsdWUiLCJlbnF1ZXVlIiwiYXBwZW5kIiwiZGVxdWV1ZSIsInJlbW92ZWRIZWFkIiwiZGVsZXRlSGVhZCIsInRvU3RyaW5nIiwiY2FsbGJhY2siXSwibWFwcGluZ3MiOiJvOUVBQUEsTUFBT0EsQ0FBQUEsVUFBUCxLQUF1QiwyQkFBdkIsQ0FFQSxjQUFlLE1BQU1DLENBQUFBLEtBQU0sQ0FDekJDLFdBQVcsRUFBRyw2Q0FDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUtDLFVBQUwsQ0FBa0IsR0FBSUgsQ0FBQUEsVUFBSixFQUFsQixDQUNELENBRUQ7O0tBR0FJLE9BQU8sRUFBRyw2Q0FDUixNQUFPLENBQUMsS0FBS0QsVUFBTCxDQUFnQkUsSUFBeEIsQ0FDRCxDQUVEOzs7S0FJQUMsSUFBSSxFQUFHLDZDQUNMLEdBQUksQ0FBQyxLQUFLSCxVQUFMLENBQWdCRSxJQUFyQixDQUEyQixnREFDekIsTUFBTyxLQUFQLENBQ0QsQ0FGRCwrQkFESyxzQkFLTCxNQUFPLE1BQUtGLFVBQUwsQ0FBZ0JFLElBQWhCLENBQXFCRSxLQUE1QixDQUNELENBRUQ7Ozs7S0FLQUMsT0FBTyxDQUFDRCxLQUFELENBQVEsNkNBQ2IsS0FBS0osVUFBTCxDQUFnQk0sTUFBaEIsQ0FBdUJGLEtBQXZCLEVBQ0QsQ0FFRDs7OztLQUtBRyxPQUFPLEVBQUcsdUJBQ1IsS0FBTUMsQ0FBQUEsV0FBVyx3QkFBRyxLQUFLUixVQUFMLENBQWdCUyxVQUFoQixFQUFILENBQWpCLENBRFEsc0JBRVIsTUFBT0QsQ0FBQUEsV0FBVywyQkFBR0EsV0FBVyxDQUFDSixLQUFmLDRCQUF1QixJQUF2QixDQUFsQixDQUNELENBRUQ7OztLQUlBTSxRQUFRLENBQUNDLFFBQUQsQ0FBVyw2Q0FDakI7QUFDQSxNQUFPLE1BQUtYLFVBQUwsQ0FBZ0JVLFFBQWhCLENBQXlCQyxRQUF6QixDQUFQLENBQ0QsQ0F0RHdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmtlZExpc3QgZnJvbSAnLi4vbGlua2VkLWxpc3QvTGlua2VkTGlzdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFF1ZXVlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gV2UncmUgZ29pbmcgdG8gaW1wbGVtZW50IFF1ZXVlIGJhc2VkIG9uIExpbmtlZExpc3Qgc2luY2UgdGhlIHR3b1xuICAgIC8vIHN0cnVjdHVyZXMgYXJlIHF1aXRlIHNpbWlsYXIuIE5hbWVseSwgdGhleSBib3RoIG9wZXJhdGUgbW9zdGx5IG9uXG4gICAgLy8gdGhlIGVsZW1lbnRzIGF0IHRoZSBiZWdpbm5pbmcgYW5kIHRoZSBlbmQuIENvbXBhcmUgZW5xdWV1ZS9kZXF1ZXVlXG4gICAgLy8gb3BlcmF0aW9ucyBvZiBRdWV1ZSB3aXRoIGFwcGVuZC9kZWxldGVIZWFkIG9wZXJhdGlvbnMgb2YgTGlua2VkTGlzdC5cbiAgICB0aGlzLmxpbmtlZExpc3QgPSBuZXcgTGlua2VkTGlzdCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBpc0VtcHR5KCkge1xuICAgIHJldHVybiAhdGhpcy5saW5rZWRMaXN0LmhlYWQ7XG4gIH1cblxuICAvKipcbiAgICogUmVhZCB0aGUgZWxlbWVudCBhdCB0aGUgZnJvbnQgb2YgdGhlIHF1ZXVlIHdpdGhvdXQgcmVtb3ZpbmcgaXQuXG4gICAqIEByZXR1cm4geyp9XG4gICAqL1xuICBwZWVrKCkge1xuICAgIGlmICghdGhpcy5saW5rZWRMaXN0LmhlYWQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmxpbmtlZExpc3QuaGVhZC52YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBuZXcgZWxlbWVudCB0byB0aGUgZW5kIG9mIHRoZSBxdWV1ZSAodGhlIHRhaWwgb2YgdGhlIGxpbmtlZCBsaXN0KS5cbiAgICogVGhpcyBlbGVtZW50IHdpbGwgYmUgcHJvY2Vzc2VkIGFmdGVyIGFsbCBlbGVtZW50cyBhaGVhZCBvZiBpdC5cbiAgICogQHBhcmFtIHsqfSB2YWx1ZVxuICAgKi9cbiAgZW5xdWV1ZSh2YWx1ZSkge1xuICAgIHRoaXMubGlua2VkTGlzdC5hcHBlbmQodmFsdWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSB0aGUgZWxlbWVudCBhdCB0aGUgZnJvbnQgb2YgdGhlIHF1ZXVlICh0aGUgaGVhZCBvZiB0aGUgbGlua2VkIGxpc3QpLlxuICAgKiBJZiB0aGUgcXVldWUgaXMgZW1wdHksIHJldHVybiBudWxsLlxuICAgKiBAcmV0dXJuIHsqfVxuICAgKi9cbiAgZGVxdWV1ZSgpIHtcbiAgICBjb25zdCByZW1vdmVkSGVhZCA9IHRoaXMubGlua2VkTGlzdC5kZWxldGVIZWFkKCk7XG4gICAgcmV0dXJuIHJlbW92ZWRIZWFkID8gcmVtb3ZlZEhlYWQudmFsdWUgOiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSBbY2FsbGJhY2tdXG4gICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIHRvU3RyaW5nKGNhbGxiYWNrKSB7XG4gICAgLy8gUmV0dXJuIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgcXVldWUncyBsaW5rZWQgbGlzdC5cbiAgICByZXR1cm4gdGhpcy5saW5rZWRMaXN0LnRvU3RyaW5nKGNhbGxiYWNrKTtcbiAgfVxufVxuIl19